  System.Data.SQLite.SR.resources - Embedded, ContainedInManifestFile, 
  System.Data.SQLite.SQLiteCommand.bmp - Embedded, ContainedInManifestFile, 
  System.Data.SQLite.SQLiteConnection.bmp - Embedded, ContainedInManifestFile, 
  System.Data.SQLite.SQLiteDataAdapter.bmp - Embedded, ContainedInManifestFile, 
ImageRuntimeVersion: v4.0.30319
Assembly System.Data.SQLite, Version=1.0.118.0, Culture=neutral, PublicKeyToken=db937bc2d44ff139: 
	hash=SHA1, flags=PublicKey
Assembly mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Assembly System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Assembly System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Assembly System.Transactions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Assembly System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Class System.Data.SQLite.AssemblySourceIdAttribute: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String SourceId 'get ' : 
  Methods:
    get_SourceId(): PrivateScope, Public, HideBySig, SpecialName
Class System.Data.SQLite.AssemblySourceTimeStampAttribute: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String SourceTimeStamp 'get ' : 
  Methods:
    get_SourceTimeStamp(): PrivateScope, Public, HideBySig, SpecialName
Class System.Data.SQLite.SQLiteLogCallback: AutoLayout, AnsiClass, Class, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(IntPtr, Int32, IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(IntPtr, Int32, IntPtr, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class System.Data.SQLite.SQLite3: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :System.Data.SQLite.SQLiteBase
    Void .ctor(System.Data.SQLite.SQLiteDateFormats, System.DateTimeKind, System.String, IntPtr, System.String, Boolean): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.String PublicKey = 002400000480000094000000060200000024000052534131000400000100010005a288de5687c4e1b621ddff5d844727418956997f475eb829429e411aff3e93f97b70de698b972640925bdd44280df0a25a843266973704137cbb0e7441c1fe7cae4e2440ae91ab8cde3933febcb1ac48dd33b40e13c421d8215c18a4349a436dd499e3c385cc683015f886f6c10bd90115eb2bd61b67750839e3a19941dc9c : Assembly, Static, Literal, HasDefault
    System.String DesignerVersion = 1.0.118.0 : Assembly, Static, Literal, HasDefault
  Properties:
    Boolean ForceLogPrepare 'get ' : 
    Boolean ForceLogRetry 'get ' : 
    System.String Version 'get ' : 
    Int32 VersionNumber 'get ' : 
    System.String DefineConstants 'get ' : 
    System.String SQLiteVersion 'get ' : 
    Int32 SQLiteVersionNumber 'get ' : 
    System.String SQLiteSourceId 'get ' : 
    System.String SQLiteCompileOptions 'get ' : 
    System.String InteropVersion 'get ' : 
    System.String InteropSourceId 'get ' : 
    System.String InteropCompileOptions 'get ' : 
    Boolean AutoCommit 'get ' : 
    Int64 LastInsertRowId 'get ' : 
    Int32 Changes 'get ' : 
    Int64 MemoryUsed 'get ' : 
    Int64 StaticMemoryUsed 'get ' : 
    Int64 MemoryHighwater 'get ' : 
    Int64 StaticMemoryHighwater 'get ' : 
    Boolean OwnHandle 'get ' : 
    System.Collections.Generic.IDictionary`2[System.Data.SQLite.SQLiteFunctionAttribute,System.Data.SQLite.SQLiteFunction] Functions 'get ' : 
  Methods:
    get_ForceLogPrepare(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride, SpecialName
    get_ForceLogRetry(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride, SpecialName
    Close(Boolean): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    Cancel(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    IsCanceled(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    BindFunction(SQLiteFunctionAttribute, SQLiteFunction, SQLiteConnectionFlags): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    UnbindFunction(SQLiteFunctionAttribute, SQLiteConnectionFlags): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    get_Version(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride, SpecialName
    get_VersionNumber(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride, SpecialName
    get_DefineConstants(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_SQLiteVersion(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_SQLiteVersionNumber(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_SQLiteSourceId(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_SQLiteCompileOptions(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_InteropVersion(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_InteropSourceId(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_InteropCompileOptions(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_AutoCommit(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride, SpecialName
    IsReadOnly(String): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    get_LastInsertRowId(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride, SpecialName
    get_Changes(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride, SpecialName
    get_MemoryUsed(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride, SpecialName
    get_StaticMemoryUsed(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_MemoryHighwater(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride, SpecialName
    get_StaticMemoryHighwater(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_OwnHandle(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride, SpecialName
    get_Functions(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride, SpecialName
    SetMemoryStatus(Boolean): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    StaticSetMemoryStatus(Boolean): PrivateScope, Assembly, Static, HideBySig
    ReleaseMemory(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    StaticReleaseMemory(Int32, Boolean, Boolean, Int32&, Boolean&, UInt32&): PrivateScope, Assembly, Static, HideBySig
    Shutdown(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    StaticShutdown(Boolean): PrivateScope, Assembly, Static, HideBySig
    IsOpen(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    GetFileName(String): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    Open(String, String, SQLiteConnectionFlags, SQLiteOpenFlagsEnum, Int32, Boolean): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    ClearPool(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    CountPool(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    SetTimeout(Int32): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    Step(SQLiteStatement): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    GetErrorString(SQLiteErrorCode): PrivateScope, Assembly, Static, HideBySig
    IsReadOnly(SQLiteStatement): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    Reset(SQLiteStatement): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    GetLastError(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    GetLastError(String): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    ForceLogLifecycle(): PrivateScope, Assembly, Static, HideBySig
    Prepare(SQLiteConnection, SQLiteCommand, String, SQLiteStatement, UInt32, String&): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    Bind_Double(SQLiteStatement, SQLiteConnectionFlags, Int32, Double): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    Bind_Int32(SQLiteStatement, SQLiteConnectionFlags, Int32, Int32): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    Bind_UInt32(SQLiteStatement, SQLiteConnectionFlags, Int32, UInt32): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    Bind_Int64(SQLiteStatement, SQLiteConnectionFlags, Int32, Int64): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    Bind_UInt64(SQLiteStatement, SQLiteConnectionFlags, Int32, UInt64): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    Bind_Boolean(SQLiteStatement, SQLiteConnectionFlags, Int32, Boolean): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    Bind_Text(SQLiteStatement, SQLiteConnectionFlags, Int32, String): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    Bind_DateTime(SQLiteStatement, SQLiteConnectionFlags, Int32, DateTime): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    Bind_Blob(SQLiteStatement, SQLiteConnectionFlags, Int32, Byte[]): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    Bind_Null(SQLiteStatement, SQLiteConnectionFlags, Int32): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    Bind_ParamCount(SQLiteStatement, SQLiteConnectionFlags): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    Bind_ParamName(SQLiteStatement, SQLiteConnectionFlags, Int32): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    Bind_ParamIndex(SQLiteStatement, SQLiteConnectionFlags, String): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    ColumnCount(SQLiteStatement): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    ColumnName(SQLiteStatement, Int32): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    ColumnAffinity(SQLiteStatement, Int32): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    ColumnType(SQLiteStatement, Int32, TypeAffinity&): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    ColumnIndex(SQLiteStatement, String): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    ColumnOriginalName(SQLiteStatement, Int32): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    ColumnDatabaseName(SQLiteStatement, Int32): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    ColumnTableName(SQLiteStatement, Int32): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    DoesTableExist(String, String): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    ColumnMetaData(String, String, String, Boolean, String&, String&, Boolean&, Boolean&, Boolean&): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    GetObject(SQLiteStatement, Int32): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    GetDouble(SQLiteStatement, Int32): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    GetBoolean(SQLiteStatement, Int32): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    GetSByte(SQLiteStatement, Int32): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    GetByte(SQLiteStatement, Int32): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    GetInt16(SQLiteStatement, Int32): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    GetUInt16(SQLiteStatement, Int32): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    GetInt32(SQLiteStatement, Int32): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    GetUInt32(SQLiteStatement, Int32): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    GetInt64(SQLiteStatement, Int32): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    GetUInt64(SQLiteStatement, Int32): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    GetText(SQLiteStatement, Int32): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    GetDateTime(SQLiteStatement, Int32): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    GetBytes(SQLiteStatement, Int32, Int32, Byte[], Int32, Int32): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    GetChar(SQLiteStatement, Int32): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    GetChars(SQLiteStatement, Int32, Int32, Char[], Int32, Int32): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    IsNull(SQLiteStatement, Int32): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    AggregateCount(IntPtr): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    CreateFunction(FunctionType, String, Int32, SQLiteFunctionFlags, Boolean, SQLiteCallback, SQLiteCallback, SQLiteFinalCallback, SQLiteFinalCallback, SQLiteCallback, Boolean): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    CreateCollation(String, SQLiteCollation, SQLiteCollation, Boolean): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    ContextCollateCompare(CollationEncodingEnum, IntPtr, String, String): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    ContextCollateCompare(CollationEncodingEnum, IntPtr, Char[], Char[]): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    GetCollationSequence(SQLiteFunction, IntPtr): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    GetParamValueBytes(IntPtr, Int32, Byte[], Int32, Int32): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    GetParamValueDouble(IntPtr): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    GetParamValueInt32(IntPtr): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    GetParamValueInt64(IntPtr): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    GetParamValueText(IntPtr): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    GetParamValueType(IntPtr): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    GetParamValueSubType(IntPtr): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    GetParamValueNumericType(IntPtr): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    GetParamValueNoChange(IntPtr): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    GetParamValueFromBind(IntPtr): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    ReturnBlob(IntPtr, Byte[]): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    ReturnDouble(IntPtr, Double): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    ReturnError(IntPtr, String): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    ReturnInt32(IntPtr, Int32): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    ReturnInt64(IntPtr, Int64): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    ReturnNull(IntPtr): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    ReturnText(IntPtr, String): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    ReturnSubType(IntPtr, UInt32): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    CreateModule(SQLiteModule, SQLiteConnectionFlags): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    DisposeModule(SQLiteModule, SQLiteConnectionFlags): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    AggregateContext(IntPtr): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    DeclareVirtualTable(SQLiteModule, String, String&): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    DeclareVirtualFunction(SQLiteModule, Int32, String, String&): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    GetStatusParameter(SQLiteStatusOpsEnum, Boolean, Int32&, Int32&): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    SetLimitOption(SQLiteLimitOpsEnum, Int32): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    SetConfigurationOption(SQLiteConfigDbOpsEnum, Object): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    SetLoadExtension(Boolean): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    LoadExtension(String, String): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    SetExtendedResultCodes(Boolean): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    ResultCode(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    ExtendedResultCode(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    LogMessage(SQLiteErrorCode, String): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    StaticLogMessage(SQLiteErrorCode, String): PrivateScope, Assembly, Static, HideBySig
    SetBusyHook(SQLiteBusyCallback): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    SetProgressHook(Int32, SQLiteProgressCallback): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    SetAuthorizerHook(SQLiteAuthorizerCallback): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    SetUpdateHook(SQLiteUpdateCallback): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    SetCommitHook(SQLiteCommitCallback): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    SetTraceCallback(SQLiteTraceCallback): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    SetTraceCallback2(SQLiteTraceFlags, SQLiteTraceCallback2): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    SetRollbackHook(SQLiteRollbackCallback): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    SetLogCallback(SQLiteLogCallback): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    GetTransactionState(String): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    InitializeBackup(SQLiteConnection, String, String): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    StepBackup(SQLiteBackup, Int32, Boolean&): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    RemainingBackup(SQLiteBackup): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    PageCountBackup(SQLiteBackup): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    FinishBackup(SQLiteBackup): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    IsInitialized(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    StaticIsInitialized(): PrivateScope, Assembly, Static, HideBySig
    GetValue(SQLiteStatement, SQLiteConnectionFlags, Int32, SQLiteType): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    GetCursorForTable(SQLiteStatement, Int32, Int32): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    GetRowIdForCursor(SQLiteStatement, Int32): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    GetIndexColumnExtendedInfo(String, String, String, Int32&, Int32&, String&): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    FileControl(String, Int32, IntPtr): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
Class System.Data.SQLite.SQLite3_UTF16: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Data.SQLite.SQLite3
    Void .ctor(System.Data.SQLite.SQLiteDateFormats, System.DateTimeKind, System.String, IntPtr, System.String, Boolean): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Methods:
    ToString(IntPtr, Int32): PrivateScope, Public, Virtual, HideBySig
    UTF16ToString(IntPtr, Int32): PrivateScope, Public, Static, HideBySig
    Open(String, String, SQLiteConnectionFlags, SQLiteOpenFlagsEnum, Int32, Boolean): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    Bind_DateTime(SQLiteStatement, SQLiteConnectionFlags, Int32, DateTime): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    Bind_Text(SQLiteStatement, SQLiteConnectionFlags, Int32, String): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    GetDateTime(SQLiteStatement, Int32): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    ColumnName(SQLiteStatement, Int32): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    ColumnType(SQLiteStatement, Int32, TypeAffinity&): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    GetText(SQLiteStatement, Int32): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    ColumnOriginalName(SQLiteStatement, Int32): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    ColumnDatabaseName(SQLiteStatement, Int32): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    ColumnTableName(SQLiteStatement, Int32): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    GetParamValueText(IntPtr): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    ReturnError(IntPtr, String): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    ReturnText(IntPtr, String): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
Class System.Data.SQLite.SQLiteBackup: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(System.Data.SQLite.SQLiteBase, System.Data.SQLite.SQLiteBackupHandle, IntPtr, Byte[], IntPtr, Byte[]): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Fields:
    System.Data.SQLite.SQLiteBase _sql : Assembly
    System.Data.SQLite.SQLiteBackupHandle _sqlite_backup : Assembly
    IntPtr _destDb : Assembly
    Byte[] _zDestName : Assembly
    IntPtr _sourceDb : Assembly
    Byte[] _zSourceName : Assembly
    System.Data.SQLite.SQLiteErrorCode _stepResult : Assembly
  Methods:
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class System.Data.SQLite.SQLiteBase: AutoLayout, AnsiClass, Class, Abstract, BeforeFieldInit
  :System.Data.SQLite.SQLiteConvert
    Void .ctor(System.Data.SQLite.SQLiteDateFormats, System.DateTimeKind, System.String): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Fields:
    Int32 COR_E_EXCEPTION = -2146233088 : Assembly, Static, Literal, HasDefault
  Properties:
    System.String Version 'get ' : 
    Int32 VersionNumber 'get ' : 
    Int64 LastInsertRowId 'get ' : 
    Int32 Changes 'get ' : 
    Int64 MemoryUsed 'get ' : 
    Int64 MemoryHighwater 'get ' : 
    Boolean OwnHandle 'get ' : 
    Boolean ForceLogPrepare 'get ' : 
    Boolean ForceLogRetry 'get ' : 
    System.Collections.Generic.IDictionary`2[System.Data.SQLite.SQLiteFunctionAttribute,System.Data.SQLite.SQLiteFunction] Functions 'get ' : 
    Boolean AutoCommit 'get ' : 
    Int64 CreateCount 'get ' : 
    Int64 OpenCount 'get ' : 
    Int64 CloseCount 'get ' : 
    Int64 DisposeCount 'get ' : 
    Int64 FinalizeCount 'get ' : 
  Methods:
    get_Version(): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract, SpecialName
    get_VersionNumber(): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract, SpecialName
    IsReadOnly(String): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    get_LastInsertRowId(): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract, SpecialName
    get_Changes(): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract, SpecialName
    get_MemoryUsed(): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract, SpecialName
    get_MemoryHighwater(): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract, SpecialName
    get_OwnHandle(): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract, SpecialName
    get_ForceLogPrepare(): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract, SpecialName
    get_ForceLogRetry(): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract, SpecialName
    get_Functions(): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract, SpecialName
    SetMemoryStatus(Boolean): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    ReleaseMemory(): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    Shutdown(): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    IsOpen(): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    GetFileName(String): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    Open(String, String, SQLiteConnectionFlags, SQLiteOpenFlagsEnum, Int32, Boolean): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    Close(Boolean): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    SetTimeout(Int32): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    GetLastError(): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    GetLastError(String): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    ClearPool(): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    CountPool(): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    Prepare(SQLiteConnection, SQLiteCommand, String, SQLiteStatement, UInt32, String&): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    Step(SQLiteStatement): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    IsReadOnly(SQLiteStatement): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    Reset(SQLiteStatement): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    Cancel(): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    IsCanceled(): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    BindFunction(SQLiteFunctionAttribute, SQLiteFunction, SQLiteConnectionFlags): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    UnbindFunction(SQLiteFunctionAttribute, SQLiteConnectionFlags): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    Bind_Double(SQLiteStatement, SQLiteConnectionFlags, Int32, Double): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    Bind_Int32(SQLiteStatement, SQLiteConnectionFlags, Int32, Int32): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    Bind_UInt32(SQLiteStatement, SQLiteConnectionFlags, Int32, UInt32): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    Bind_Int64(SQLiteStatement, SQLiteConnectionFlags, Int32, Int64): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    Bind_UInt64(SQLiteStatement, SQLiteConnectionFlags, Int32, UInt64): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    Bind_Boolean(SQLiteStatement, SQLiteConnectionFlags, Int32, Boolean): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    Bind_Text(SQLiteStatement, SQLiteConnectionFlags, Int32, String): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    Bind_Blob(SQLiteStatement, SQLiteConnectionFlags, Int32, Byte[]): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    Bind_DateTime(SQLiteStatement, SQLiteConnectionFlags, Int32, DateTime): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    Bind_Null(SQLiteStatement, SQLiteConnectionFlags, Int32): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    Bind_ParamCount(SQLiteStatement, SQLiteConnectionFlags): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    Bind_ParamName(SQLiteStatement, SQLiteConnectionFlags, Int32): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    Bind_ParamIndex(SQLiteStatement, SQLiteConnectionFlags, String): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    ColumnCount(SQLiteStatement): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    ColumnName(SQLiteStatement, Int32): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    ColumnAffinity(SQLiteStatement, Int32): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    ColumnType(SQLiteStatement, Int32, TypeAffinity&): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    ColumnIndex(SQLiteStatement, String): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    ColumnOriginalName(SQLiteStatement, Int32): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    ColumnDatabaseName(SQLiteStatement, Int32): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    ColumnTableName(SQLiteStatement, Int32): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    DoesTableExist(String, String): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    ColumnMetaData(String, String, String, Boolean, String&, String&, Boolean&, Boolean&, Boolean&): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    GetIndexColumnExtendedInfo(String, String, String, Int32&, Int32&, String&): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    GetObject(SQLiteStatement, Int32): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    GetDouble(SQLiteStatement, Int32): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    GetBoolean(SQLiteStatement, Int32): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    GetSByte(SQLiteStatement, Int32): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    GetByte(SQLiteStatement, Int32): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    GetInt16(SQLiteStatement, Int32): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    GetUInt16(SQLiteStatement, Int32): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    GetInt32(SQLiteStatement, Int32): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    GetUInt32(SQLiteStatement, Int32): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    GetInt64(SQLiteStatement, Int32): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    GetUInt64(SQLiteStatement, Int32): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    GetText(SQLiteStatement, Int32): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    GetBytes(SQLiteStatement, Int32, Int32, Byte[], Int32, Int32): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    GetChar(SQLiteStatement, Int32): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    GetChars(SQLiteStatement, Int32, Int32, Char[], Int32, Int32): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    GetDateTime(SQLiteStatement, Int32): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    IsNull(SQLiteStatement, Int32): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    CreateCollation(String, SQLiteCollation, SQLiteCollation, Boolean): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    CreateFunction(FunctionType, String, Int32, SQLiteFunctionFlags, Boolean, SQLiteCallback, SQLiteCallback, SQLiteFinalCallback, SQLiteFinalCallback, SQLiteCallback, Boolean): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    GetCollationSequence(SQLiteFunction, IntPtr): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    ContextCollateCompare(CollationEncodingEnum, IntPtr, String, String): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    ContextCollateCompare(CollationEncodingEnum, IntPtr, Char[], Char[]): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    AggregateCount(IntPtr): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    AggregateContext(IntPtr): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    GetParamValueBytes(IntPtr, Int32, Byte[], Int32, Int32): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    GetParamValueDouble(IntPtr): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    GetParamValueInt32(IntPtr): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    GetParamValueInt64(IntPtr): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    GetParamValueText(IntPtr): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    GetParamValueType(IntPtr): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    GetParamValueSubType(IntPtr): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    GetParamValueNumericType(IntPtr): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    GetParamValueNoChange(IntPtr): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    GetParamValueFromBind(IntPtr): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    ReturnBlob(IntPtr, Byte[]): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    ReturnDouble(IntPtr, Double): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    ReturnError(IntPtr, String): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    ReturnInt32(IntPtr, Int32): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    ReturnInt64(IntPtr, Int64): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    ReturnNull(IntPtr): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    ReturnText(IntPtr, String): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    ReturnSubType(IntPtr, UInt32): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    CreateModule(SQLiteModule, SQLiteConnectionFlags): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    DisposeModule(SQLiteModule, SQLiteConnectionFlags): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    DeclareVirtualTable(SQLiteModule, String, String&): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    DeclareVirtualFunction(SQLiteModule, Int32, String, String&): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    GetStatusParameter(SQLiteStatusOpsEnum, Boolean, Int32&, Int32&): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    SetLimitOption(SQLiteLimitOpsEnum, Int32): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    SetConfigurationOption(SQLiteConfigDbOpsEnum, Object): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    SetLoadExtension(Boolean): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    LoadExtension(String, String): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    SetExtendedResultCodes(Boolean): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    ResultCode(): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    ExtendedResultCode(): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    LogMessage(SQLiteErrorCode, String): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    SetBusyHook(SQLiteBusyCallback): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    SetProgressHook(Int32, SQLiteProgressCallback): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    SetAuthorizerHook(SQLiteAuthorizerCallback): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    SetUpdateHook(SQLiteUpdateCallback): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    SetCommitHook(SQLiteCommitCallback): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    SetTraceCallback(SQLiteTraceCallback): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    SetTraceCallback2(SQLiteTraceFlags, SQLiteTraceCallback2): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    SetRollbackHook(SQLiteRollbackCallback): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    SetLogCallback(SQLiteLogCallback): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    GetTransactionState(String): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    IsInitialized(): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    GetCursorForTable(SQLiteStatement, Int32, Int32): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    GetRowIdForCursor(SQLiteStatement, Int32): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    GetValue(SQLiteStatement, SQLiteConnectionFlags, Int32, SQLiteType): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    get_AutoCommit(): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract, SpecialName
    FileControl(String, Int32, IntPtr): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    InitializeBackup(SQLiteConnection, String, String): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    StepBackup(SQLiteBackup, Int32, Boolean&): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    RemainingBackup(SQLiteBackup): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    PageCountBackup(SQLiteBackup): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    FinishBackup(SQLiteBackup): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    get_CreateCount(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_OpenCount(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_CloseCount(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_DisposeCount(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_FinalizeCount(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetLastError(SQLiteConnectionHandle, IntPtr): PrivateScope, Assembly, Static, HideBySig
    FinishBackup(SQLiteConnectionHandle, IntPtr): PrivateScope, Assembly, Static, HideBySig
    CloseBlob(SQLiteConnectionHandle, IntPtr): PrivateScope, Assembly, Static, HideBySig
    FinalizeStatement(SQLiteConnectionHandle, IntPtr): PrivateScope, Assembly, Static, HideBySig
    CloseConnection(SQLiteConnectionHandle, IntPtr): PrivateScope, Assembly, Static, HideBySig
    CloseConnectionV2(SQLiteConnectionHandle, IntPtr): PrivateScope, Assembly, Static, HideBySig
    ResetConnection(SQLiteConnectionHandle, IntPtr, Boolean): PrivateScope, Assembly, Static, HideBySig
    IsAutocommit(SQLiteConnectionHandle, IntPtr): PrivateScope, Assembly, Static, HideBySig
Interface System.Data.SQLite.ISQLiteSchemaExtensions: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    BuildTempSchema(SQLiteConnection): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Struct System.Data.SQLite.SQLiteOpenFlagsEnum: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Data.SQLite.SQLiteOpenFlagsEnum None = 0 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteOpenFlagsEnum ReadOnly = 1 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteOpenFlagsEnum ReadWrite = 2 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteOpenFlagsEnum Create = 4 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteOpenFlagsEnum Uri = 64 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteOpenFlagsEnum Memory = 128 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteOpenFlagsEnum Default = 6 : Public, Static, Literal, HasDefault
Struct System.Data.SQLite.SQLiteConnectionFlags: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int64 value__ : Public, SpecialName, RTSpecialName
    System.Data.SQLite.SQLiteConnectionFlags None = 0 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteConnectionFlags LogPrepare = 1 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteConnectionFlags LogPreBind = 2 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteConnectionFlags LogBind = 4 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteConnectionFlags LogCallbackException = 8 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteConnectionFlags LogBackup = 16 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteConnectionFlags NoExtensionFunctions = 32 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteConnectionFlags BindUInt32AsInt64 = 64 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteConnectionFlags BindAllAsText = 128 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteConnectionFlags GetAllAsText = 256 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteConnectionFlags NoLoadExtension = 512 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteConnectionFlags NoCreateModule = 1024 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteConnectionFlags NoBindFunctions = 2048 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteConnectionFlags NoLogModule = 4096 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteConnectionFlags LogModuleError = 8192 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteConnectionFlags LogModuleException = 16384 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteConnectionFlags TraceWarning = 32768 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteConnectionFlags ConvertInvariantText = 65536 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteConnectionFlags BindInvariantText = 131072 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteConnectionFlags NoConnectionPool = 262144 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteConnectionFlags UseConnectionPool = 524288 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteConnectionFlags UseConnectionTypes = 1048576 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteConnectionFlags NoGlobalTypes = 2097152 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteConnectionFlags StickyHasRows = 4194304 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteConnectionFlags StrictEnlistment = 8388608 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteConnectionFlags MapIsolationLevels = 16777216 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteConnectionFlags DetectTextAffinity = 33554432 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteConnectionFlags DetectStringType = 67108864 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteConnectionFlags NoConvertSettings = 134217728 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteConnectionFlags BindDateTimeWithKind = 268435456 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteConnectionFlags RollbackOnException = 536870912 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteConnectionFlags DenyOnException = 1073741824 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteConnectionFlags InterruptOnException = 2147483648 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteConnectionFlags UnbindFunctionsOnClose = 4294967296 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteConnectionFlags NoVerifyTextAffinity = 8589934592 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteConnectionFlags UseConnectionBindValueCallbacks = 17179869184 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteConnectionFlags UseConnectionReadValueCallbacks = 34359738368 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteConnectionFlags UseParameterNameForTypeName = 68719476736 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteConnectionFlags UseParameterDbTypeForTypeName = 137438953472 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteConnectionFlags NoVerifyTypeAffinity = 274877906944 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteConnectionFlags AllowNestedTransactions = 549755813888 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteConnectionFlags BindDecimalAsText = 1099511627776 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteConnectionFlags GetDecimalAsText = 2199023255552 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteConnectionFlags BindInvariantDecimal = 4398046511104 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteConnectionFlags GetInvariantDecimal = 8796093022208 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteConnectionFlags WaitForEnlistmentReset = 17592186044416 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteConnectionFlags GetInvariantInt64 = 35184372088832 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteConnectionFlags GetInvariantDouble = 70368744177664 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteConnectionFlags StrictConformance = 140737488355328 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteConnectionFlags HidePassword = 281474976710656 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteConnectionFlags NoCoreFunctions = 562949953421312 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteConnectionFlags StopOnException = 1125899906842624 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteConnectionFlags LogRetry = 2251799813685248 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteConnectionFlags BindAndGetAllAsText = 384 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteConnectionFlags ConvertAndBindInvariantText = 196608 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteConnectionFlags BindAndGetAllAsInvariantText = 131456 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteConnectionFlags ConvertAndBindAndGetAllAsInvariantText = 196992 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteConnectionFlags UseConnectionAllValueCallbacks = 51539607552 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteConnectionFlags UseParameterAnythingForTypeName = 206158430208 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteConnectionFlags LogAll = 2251799813709855 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteConnectionFlags LogDefault = 16392 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteConnectionFlags Default = 13194139549704 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteConnectionFlags DefaultAndLogAll = 2264993953243167 : Public, Static, Literal, HasDefault
Struct System.Data.SQLite.SQLiteStatusOpsEnum: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Data.SQLite.SQLiteStatusOpsEnum SQLITE_DBSTATUS_LOOKASIDE_USED = 0 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteStatusOpsEnum SQLITE_DBSTATUS_CACHE_USED = 1 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteStatusOpsEnum SQLITE_DBSTATUS_SCHEMA_USED = 2 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteStatusOpsEnum SQLITE_DBSTATUS_STMT_USED = 3 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteStatusOpsEnum SQLITE_DBSTATUS_LOOKASIDE_HIT = 4 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteStatusOpsEnum SQLITE_DBSTATUS_LOOKASIDE_MISS_SIZE = 5 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteStatusOpsEnum SQLITE_DBSTATUS_LOOKASIDE_MISS_FULL = 6 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteStatusOpsEnum SQLITE_DBSTATUS_CACHE_HIT = 7 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteStatusOpsEnum SQLITE_DBSTATUS_CACHE_MISS = 8 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteStatusOpsEnum SQLITE_DBSTATUS_CACHE_WRITE = 9 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteStatusOpsEnum SQLITE_DBSTATUS_DEFERRED_FKS = 10 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteStatusOpsEnum SQLITE_DBSTATUS_CACHE_USED_SHARED = 11 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteStatusOpsEnum SQLITE_DBSTATUS_CACHE_SPILL = 12 : Public, Static, Literal, HasDefault
Struct System.Data.SQLite.SQLiteConfigDbOpsEnum: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Data.SQLite.SQLiteConfigDbOpsEnum SQLITE_DBCONFIG_NONE = 0 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteConfigDbOpsEnum SQLITE_DBCONFIG_MAINDBNAME = 1000 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteConfigDbOpsEnum SQLITE_DBCONFIG_LOOKASIDE = 1001 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteConfigDbOpsEnum SQLITE_DBCONFIG_ENABLE_FKEY = 1002 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteConfigDbOpsEnum SQLITE_DBCONFIG_ENABLE_TRIGGER = 1003 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteConfigDbOpsEnum SQLITE_DBCONFIG_ENABLE_FTS3_TOKENIZER = 1004 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteConfigDbOpsEnum SQLITE_DBCONFIG_ENABLE_LOAD_EXTENSION = 1005 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteConfigDbOpsEnum SQLITE_DBCONFIG_NO_CKPT_ON_CLOSE = 1006 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteConfigDbOpsEnum SQLITE_DBCONFIG_ENABLE_QPSG = 1007 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteConfigDbOpsEnum SQLITE_DBCONFIG_TRIGGER_EQP = 1008 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteConfigDbOpsEnum SQLITE_DBCONFIG_RESET_DATABASE = 1009 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteConfigDbOpsEnum SQLITE_DBCONFIG_DEFENSIVE = 1010 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteConfigDbOpsEnum SQLITE_DBCONFIG_WRITABLE_SCHEMA = 1011 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteConfigDbOpsEnum SQLITE_DBCONFIG_LEGACY_ALTER_TABLE = 1012 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteConfigDbOpsEnum SQLITE_DBCONFIG_DQS_DML = 1013 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteConfigDbOpsEnum SQLITE_DBCONFIG_DQS_DDL = 1014 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteConfigDbOpsEnum SQLITE_DBCONFIG_ENABLE_VIEW = 1015 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteConfigDbOpsEnum SQLITE_DBCONFIG_LEGACY_FILE_FORMAT = 1016 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteConfigDbOpsEnum SQLITE_DBCONFIG_TRUSTED_SCHEMA = 1017 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteConfigDbOpsEnum SQLITE_DBCONFIG_STMT_SCANSTATUS = 1018 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteConfigDbOpsEnum SQLITE_DBCONFIG_REVERSE_SCANORDER = 1019 : Public, Static, Literal, HasDefault
Struct System.Data.SQLite.SQLiteConfigOpsEnum: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Data.SQLite.SQLiteConfigOpsEnum SQLITE_CONFIG_NONE = 0 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteConfigOpsEnum SQLITE_CONFIG_SINGLETHREAD = 1 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteConfigOpsEnum SQLITE_CONFIG_MULTITHREAD = 2 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteConfigOpsEnum SQLITE_CONFIG_SERIALIZED = 3 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteConfigOpsEnum SQLITE_CONFIG_MALLOC = 4 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteConfigOpsEnum SQLITE_CONFIG_GETMALLOC = 5 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteConfigOpsEnum SQLITE_CONFIG_SCRATCH = 6 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteConfigOpsEnum SQLITE_CONFIG_PAGECACHE = 7 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteConfigOpsEnum SQLITE_CONFIG_HEAP = 8 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteConfigOpsEnum SQLITE_CONFIG_MEMSTATUS = 9 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteConfigOpsEnum SQLITE_CONFIG_MUTEX = 10 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteConfigOpsEnum SQLITE_CONFIG_GETMUTEX = 11 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteConfigOpsEnum SQLITE_CONFIG_LOOKASIDE = 13 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteConfigOpsEnum SQLITE_CONFIG_PCACHE = 14 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteConfigOpsEnum SQLITE_CONFIG_GETPCACHE = 15 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteConfigOpsEnum SQLITE_CONFIG_LOG = 16 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteConfigOpsEnum SQLITE_CONFIG_URI = 17 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteConfigOpsEnum SQLITE_CONFIG_PCACHE2 = 18 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteConfigOpsEnum SQLITE_CONFIG_GETPCACHE2 = 19 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteConfigOpsEnum SQLITE_CONFIG_COVERING_INDEX_SCAN = 20 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteConfigOpsEnum SQLITE_CONFIG_SQLLOG = 21 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteConfigOpsEnum SQLITE_CONFIG_MMAP_SIZE = 22 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteConfigOpsEnum SQLITE_CONFIG_WIN32_HEAPSIZE = 23 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteConfigOpsEnum SQLITE_CONFIG_PCACHE_HDRSZ = 24 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteConfigOpsEnum SQLITE_CONFIG_PMASZ = 25 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteConfigOpsEnum SQLITE_CONFIG_STMTJRNL_SPILL = 26 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteConfigOpsEnum SQLITE_CONFIG_SMALL_MALLOC = 27 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteConfigOpsEnum SQLITE_CONFIG_SORTERREF_SIZE = 28 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteConfigOpsEnum SQLITE_CONFIG_MEMDB_MAXSIZE = 29 : Public, Static, Literal, HasDefault
Struct System.Data.SQLite.SQLiteTransactionState: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Data.SQLite.SQLiteTransactionState SQLITE_TXN_UNKNOWN = -1 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteTransactionState SQLITE_TXN_NONE = 0 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteTransactionState SQLITE_TXN_READ = 1 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteTransactionState SQLITE_TXN_WRITE = 2 : Public, Static, Literal, HasDefault
Struct System.Data.SQLite.SQLiteTraceFlags: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Data.SQLite.SQLiteTraceFlags SQLITE_TRACE_NONE = 0 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteTraceFlags SQLITE_TRACE_STMT = 1 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteTraceFlags SQLITE_TRACE_PROFILE = 2 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteTraceFlags SQLITE_TRACE_ROW = 4 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteTraceFlags SQLITE_TRACE_CLOSE = 8 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteTraceFlags SQLITE_TRACE_ALL = 15 : Public, Static, Literal, HasDefault
Struct System.Data.SQLite.SQLiteLimitOpsEnum: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Data.SQLite.SQLiteLimitOpsEnum SQLITE_LIMIT_NONE = -1 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteLimitOpsEnum SQLITE_LIMIT_LENGTH = 0 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteLimitOpsEnum SQLITE_LIMIT_SQL_LENGTH = 1 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteLimitOpsEnum SQLITE_LIMIT_COLUMN = 2 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteLimitOpsEnum SQLITE_LIMIT_EXPR_DEPTH = 3 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteLimitOpsEnum SQLITE_LIMIT_COMPOUND_SELECT = 4 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteLimitOpsEnum SQLITE_LIMIT_VDBE_OP = 5 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteLimitOpsEnum SQLITE_LIMIT_FUNCTION_ARG = 6 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteLimitOpsEnum SQLITE_LIMIT_ATTACHED = 7 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteLimitOpsEnum SQLITE_LIMIT_LIKE_PATTERN_LENGTH = 8 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteLimitOpsEnum SQLITE_LIMIT_VARIABLE_NUMBER = 9 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteLimitOpsEnum SQLITE_LIMIT_TRIGGER_DEPTH = 10 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteLimitOpsEnum SQLITE_LIMIT_WORKER_THREADS = 11 : Public, Static, Literal, HasDefault
Class System.Data.SQLite.SQLiteBlob: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  Interfaces:
    System.IDisposable
  Fields:
    System.Data.SQLite.SQLiteBase _sql : Assembly
    System.Data.SQLite.SQLiteBlobHandle _sqlite_blob : Assembly
  Methods:
    Create(SQLiteDataReader, Int32, Boolean): PrivateScope, Public, Static, HideBySig
    Create(SQLiteConnection, String, String, String, Int64, Boolean): PrivateScope, Public, Static, HideBySig
    Reopen(Int64): PrivateScope, Public, HideBySig
    GetCount(): PrivateScope, Public, HideBySig
    Read(Byte[], Int32, Int32): PrivateScope, Public, HideBySig
    Write(Byte[], Int32, Int32): PrivateScope, Public, HideBySig
    Close(): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class System.Data.SQLite.SQLiteCommand: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Data.Common.DbCommand
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Data.SQLite.SQLiteConnection): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Data.SQLite.SQLiteConnection): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Data.SQLite.SQLiteConnection, System.Data.SQLite.SQLiteTransaction): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.ICloneable
  Fields:
    Int32 _commandTimeout : Assembly
    Int32 _maximumSleepTime : Assembly
    System.Collections.Generic.List`1[System.Data.SQLite.SQLiteStatement] _statementList : Assembly
    System.String _remainingText : Assembly
    System.Nullable`1[System.Data.CommandBehavior] GlobalCommandBehaviors : Public, Static
    System.String DefaultConnectionString : Assembly, Static, InitOnly
    System.Data.CommandBehavior SkipExtraReads = 268435456 : Public, Static, Literal, HasDefault
    System.Data.CommandBehavior ForceExtraReads = 536870912 : Public, Static, Literal, HasDefault
  Properties:
    System.String CommandText 'get set' : 
    Int32 CommandTimeout 'get set' : 
    Int32 MaximumSleepTime 'get set' : 
    System.Data.CommandType CommandType 'get set' : 
    System.Data.SQLite.SQLiteConnection Connection 'get set' : 
    System.Data.SQLite.SQLiteParameterCollection Parameters 'get ' : 
    System.Data.SQLite.SQLiteTransaction Transaction 'get set' : 
    System.Data.UpdateRowSource UpdatedRowSource 'get set' : 
    Boolean DesignTimeVisible 'get set' : 
  Methods:
    Check(SQLiteCommand): PrivateScope, Assembly, Static, HideBySig
    GetFlags(SQLiteCommand): PrivateScope, Assembly, Static, HideBySig
    GetPrepareRetries(SQLiteCommand): PrivateScope, Assembly, Static, HideBySig
    GetStepRetries(SQLiteCommand): PrivateScope, Assembly, Static, HideBySig
    GetMaximumSleepTime(SQLiteCommand): PrivateScope, Assembly, Static, HideBySig
    ClearCommands(): PrivateScope, Assembly, HideBySig
    BuildNextCommand(): PrivateScope, Assembly, HideBySig
    GetStatement(Int32): PrivateScope, Assembly, HideBySig
    Cancel(): PrivateScope, Public, Virtual, HideBySig
    get_CommandText(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_CommandText(String): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CommandTimeout(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_CommandTimeout(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_MaximumSleepTime(): PrivateScope, Public, HideBySig, SpecialName
    set_MaximumSleepTime(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_CommandType(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_CommandType(CommandType): PrivateScope, Public, Virtual, HideBySig, SpecialName
    CreateParameter(): PrivateScope, Public, HideBySig
    get_Connection(): PrivateScope, Public, HideBySig, SpecialName
    set_Connection(SQLiteConnection): PrivateScope, Public, HideBySig, SpecialName
    get_Parameters(): PrivateScope, Public, HideBySig, SpecialName
    get_Transaction(): PrivateScope, Public, HideBySig, SpecialName
    set_Transaction(SQLiteTransaction): PrivateScope, Public, HideBySig, SpecialName
    VerifyOnly(): PrivateScope, Public, HideBySig
    Execute(String, SQLiteExecuteType, String, Object[]): PrivateScope, Public, Static, HideBySig
    Execute(String, SQLiteExecuteType, CommandBehavior, String, Object[]): PrivateScope, Public, Static, HideBySig
    Execute(String, SQLiteExecuteType, CommandBehavior, SQLiteConnection, Object[]): PrivateScope, Public, Static, HideBySig
    ExecuteReader(CommandBehavior): PrivateScope, Public, HideBySig
    ExecuteReader(): PrivateScope, Public, HideBySig
    ResetDataReader(): PrivateScope, Assembly, HideBySig
    ExecuteNonQuery(): PrivateScope, Public, Virtual, HideBySig
    ExecuteNonQuery(CommandBehavior): PrivateScope, Public, HideBySig
    CombineBehaviors(Nullable`1, String, String&(Out)): PrivateScope, Public, Static, HideBySig
    MaybeReadRemaining(SQLiteDataReader, CommandBehavior): PrivateScope, Public, HideBySig
    ExecuteScalar(): PrivateScope, Public, Virtual, HideBySig
    ExecuteScalar(CommandBehavior): PrivateScope, Public, HideBySig
    Reset(): PrivateScope, Public, HideBySig
    Reset(Boolean, Boolean): PrivateScope, Public, HideBySig
    Prepare(): PrivateScope, Public, Virtual, HideBySig
    get_UpdatedRowSource(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_UpdatedRowSource(UpdateRowSource): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_DesignTimeVisible(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_DesignTimeVisible(Boolean): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Clone(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetDiagnostics(): PrivateScope, Public, HideBySig
Class System.Data.SQLite.SQLiteCommandBuilder: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Data.Common.DbCommandBuilder
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Data.SQLite.SQLiteDataAdapter): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Data.SQLite.SQLiteDataAdapter DataAdapter 'get set' : 
    System.Data.Common.CatalogLocation CatalogLocation 'get set' : 
    System.String CatalogSeparator 'get set' : 
    System.String QuotePrefix 'get set' : 
    System.String QuoteSuffix 'get set' : 
    System.String SchemaSeparator 'get set' : 
  Methods:
    get_DataAdapter(): PrivateScope, Public, HideBySig, SpecialName
    set_DataAdapter(SQLiteDataAdapter): PrivateScope, Public, HideBySig, SpecialName
    GetDeleteCommand(): PrivateScope, Public, HideBySig
    GetDeleteCommand(Boolean): PrivateScope, Public, HideBySig
    GetUpdateCommand(): PrivateScope, Public, HideBySig
    GetUpdateCommand(Boolean): PrivateScope, Public, HideBySig
    GetInsertCommand(): PrivateScope, Public, HideBySig
    GetInsertCommand(Boolean): PrivateScope, Public, HideBySig
    get_CatalogLocation(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_CatalogLocation(CatalogLocation): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CatalogSeparator(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_CatalogSeparator(String): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_QuotePrefix(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_QuotePrefix(String): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_QuoteSuffix(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_QuoteSuffix(String): PrivateScope, Public, Virtual, HideBySig, SpecialName
    QuoteIdentifier(String): PrivateScope, Public, Virtual, HideBySig
    UnquoteIdentifier(String): PrivateScope, Public, Virtual, HideBySig
    get_SchemaSeparator(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_SchemaSeparator(String): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class System.Data.SQLite.SQLiteDataReaderValue: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.Data.SQLite.SQLiteBlob BlobValue : Public
    System.Nullable`1[System.Boolean] BooleanValue : Public
    System.Nullable`1[System.Byte] ByteValue : Public
    Byte[] BytesValue : Public
    System.Nullable`1[System.Char] CharValue : Public
    Char[] CharsValue : Public
    System.Nullable`1[System.DateTime] DateTimeValue : Public
    System.Nullable`1[System.Decimal] DecimalValue : Public
    System.Nullable`1[System.Double] DoubleValue : Public
    System.Nullable`1[System.Single] FloatValue : Public
    System.Nullable`1[System.Guid] GuidValue : Public
    System.Nullable`1[System.Int16] Int16Value : Public
    System.Nullable`1[System.Int32] Int32Value : Public
    System.Nullable`1[System.Int64] Int64Value : Public
    System.String StringValue : Public
    System.Object Value : Public
Class System.Data.SQLite.SQLiteReadEventArgs: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :System.EventArgs
Class System.Data.SQLite.SQLiteReadBlobEventArgs: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Data.SQLite.SQLiteReadEventArgs
    Void .ctor(Boolean): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean ReadOnly 'get set' : 
  Methods:
    get_ReadOnly(): PrivateScope, Public, HideBySig, SpecialName
    set_ReadOnly(Boolean): PrivateScope, Public, HideBySig, SpecialName
Class System.Data.SQLite.SQLiteReadArrayEventArgs: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Data.SQLite.SQLiteReadEventArgs
    Void .ctor(Int64, Byte[], Int32, Int32): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int64, Char[], Int32, Int32): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int64 DataOffset 'get set' : 
    Byte[] ByteBuffer 'get ' : 
    Char[] CharBuffer 'get ' : 
    Int32 BufferOffset 'get set' : 
    Int32 Length 'get set' : 
  Methods:
    get_DataOffset(): PrivateScope, Public, HideBySig, SpecialName
    set_DataOffset(Int64): PrivateScope, Public, HideBySig, SpecialName
    get_ByteBuffer(): PrivateScope, Public, HideBySig, SpecialName
    get_CharBuffer(): PrivateScope, Public, HideBySig, SpecialName
    get_BufferOffset(): PrivateScope, Public, HideBySig, SpecialName
    set_BufferOffset(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Length(): PrivateScope, Public, HideBySig, SpecialName
    set_Length(Int32): PrivateScope, Public, HideBySig, SpecialName
Class System.Data.SQLite.SQLiteReadValueEventArgs: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Data.SQLite.SQLiteReadEventArgs
    Void .ctor(System.String, System.Data.SQLite.SQLiteReadEventArgs, System.Data.SQLite.SQLiteDataReaderValue): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String MethodName 'get ' : 
    System.Data.SQLite.SQLiteReadEventArgs ExtraEventArgs 'get ' : 
    System.Data.SQLite.SQLiteDataReaderValue Value 'get ' : 
  Methods:
    get_MethodName(): PrivateScope, Public, HideBySig, SpecialName
    get_ExtraEventArgs(): PrivateScope, Public, HideBySig, SpecialName
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
Class System.Data.SQLite.SQLiteBindValueCallback: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(SQLiteConvert, SQLiteCommand, SQLiteConnectionFlags, SQLiteParameter, String, Int32, Object, Boolean&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(SQLiteConvert, SQLiteCommand, SQLiteConnectionFlags, SQLiteParameter, String, Int32, Object, Boolean&(Out), AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(Boolean&(Out), IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class System.Data.SQLite.SQLiteReadValueCallback: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(SQLiteConvert, SQLiteDataReader, SQLiteConnectionFlags, SQLiteReadEventArgs, String, Int32, Object, Boolean&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(SQLiteConvert, SQLiteDataReader, SQLiteConnectionFlags, SQLiteReadEventArgs, String, Int32, Object, Boolean&(Out), AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(Boolean&(Out), IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class System.Data.SQLite.SQLiteTypeCallbacks: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  Properties:
    System.String TypeName 'get set' : 
    System.Data.SQLite.SQLiteBindValueCallback BindValueCallback 'get ' : 
    System.Data.SQLite.SQLiteReadValueCallback ReadValueCallback 'get ' : 
    System.Object BindValueUserData 'get ' : 
    System.Object ReadValueUserData 'get ' : 
  Methods:
    Create(SQLiteBindValueCallback, SQLiteReadValueCallback, Object, Object): PrivateScope, Public, Static, HideBySig
    get_TypeName(): PrivateScope, Public, HideBySig, SpecialName
    set_TypeName(String): PrivateScope, Assembly, HideBySig, SpecialName
    get_BindValueCallback(): PrivateScope, Public, HideBySig, SpecialName
    get_ReadValueCallback(): PrivateScope, Public, HideBySig, SpecialName
    get_BindValueUserData(): PrivateScope, Public, HideBySig, SpecialName
    get_ReadValueUserData(): PrivateScope, Public, HideBySig, SpecialName
Class System.Data.SQLite.SQLiteTypeCallbacksMap: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Collections.Generic.Dictionary`2[System.String,System.Data.SQLite.SQLiteTypeCallbacks]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class System.Data.SQLite.ConnectionEventArgs: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.EventArgs
    Void .ctor(System.Data.SQLite.SQLiteConnectionEventType, System.Data.StateChangeEventArgs, System.Data.IDbTransaction, System.Data.IDbCommand, System.Data.IDataReader, System.Runtime.InteropServices.CriticalHandle, System.String, System.Object): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Data.SQLite.SQLiteConnectionEventType, System.Data.StateChangeEventArgs, System.Data.IDbTransaction, System.Data.IDbCommand, System.Data.IDataReader, System.Runtime.InteropServices.CriticalHandle, System.String, System.Object, System.String): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.Data.SQLite.SQLiteConnectionEventType EventType : Public, InitOnly
    System.Data.StateChangeEventArgs EventArgs : Public, InitOnly
    System.Data.IDbTransaction Transaction : Public, InitOnly
    System.Data.IDbCommand Command : Public, InitOnly
    System.Data.IDataReader DataReader : Public, InitOnly
    System.Runtime.InteropServices.CriticalHandle CriticalHandle : Public, InitOnly
    System.String Text : Public, InitOnly
    System.Object Data : Public, InitOnly
  Properties:
    System.String Result 'get set' : 
  Methods:
    get_Result(): PrivateScope, Public, HideBySig, SpecialName
    set_Result(String): PrivateScope, Public, HideBySig, SpecialName
Class System.Data.SQLite.SQLiteConnectionEventHandler: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(Object, ConnectionEventArgs): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(Object, ConnectionEventArgs, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class System.Data.SQLite.SQLiteConnection: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Data.Common.DbConnection
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(IntPtr, System.String, Boolean): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Data.SQLite.SQLiteConnection): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.ICloneable
  Fields:
    Int32 _transactionLevel : Assembly
    Int32 _transactionSequence : Assembly
    Boolean _noDispose : Assembly
    System.Object _enlistmentSyncRoot : Assembly, InitOnly
    System.Data.SQLite.SQLiteEnlistment _enlistment : Assembly
    System.Data.SQLite.SQLiteDbTypeMap _typeNames : Assembly
    System.Data.SQLite.SQLiteBase _sql : Assembly
    System.String _baseSchemaName : Assembly
    Int32 _defaultMaximumSleepTime : Assembly
    Int32 _prepareRetries : Assembly
    Int32 _stepRetries : Assembly
    Boolean _binaryGuid : Assembly
    Int32 _version : Assembly
    System.Data.DbType BadDbType = -1 : Assembly, Static, Literal, HasDefault
    System.String DefaultBaseSchemaName = sqlite_default_schema : Assembly, Static, Literal, HasDefault
    System.Data.IsolationLevel DeferredIsolationLevel = 4096 : Assembly, Static, Literal, HasDefault
    System.Data.IsolationLevel ImmediateIsolationLevel = 1048576 : Assembly, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteDateFormats DefaultDateTimeFormat = 1 : Assembly, Static, Literal, HasDefault
    System.DateTimeKind DefaultDateTimeKind = 0 : Assembly, Static, Literal, HasDefault
    System.String DefaultDateTimeFormatString =  : Assembly, Static, Literal, HasDefault
    Int32 DefaultConnectionMaximumSleepTime = 150 : Assembly, Static, Literal, HasDefault
    Boolean DefaultBinaryGUID = True : Assembly, Static, Literal, HasDefault
    Int32 DefaultPrepareRetries = 3 : Assembly, Static, Literal, HasDefault
    Int32 DefaultStepRetries = 40 : Assembly, Static, Literal, HasDefault
  Properties:
    System.Data.SQLite.ISQLiteConnectionPool ConnectionPool 'get set' : 
    Int32 PoolCount 'get ' : 
    Int64 CreateCount 'get ' : 
    Int64 OpenCount 'get ' : 
    Int64 CloseCount 'get ' : 
    Int64 DisposeCount 'get ' : 
    System.String ConnectionString 'get set' : 
    System.String DataSource 'get ' : 
    System.String FileName 'get ' : 
    System.String Database 'get ' : 
    Int32 DefaultTimeout 'get set' : 
    Int32 DefaultMaximumSleepTime 'get set' : 
    Int32 BusyTimeout 'get set' : 
    Int32 WaitTimeout 'get set' : 
    Int32 PrepareRetries 'get set' : 
    Int32 StepRetries 'get set' : 
    Int32 ProgressOps 'get set' : 
    Boolean ParseViaFramework 'get set' : 
    System.Data.SQLite.SQLiteConnectionFlags Flags 'get set' : 
    System.Nullable`1[System.Data.DbType] DefaultDbType 'get set' : 
    System.String DefaultTypeName 'get set' : 
    System.String VfsName 'get set' : 
    Boolean OwnHandle 'get ' : 
    System.String ServerVersion 'get ' : 
    Int64 LastInsertRowId 'get ' : 
    Int32 Changes 'get ' : 
    Boolean AutoCommit 'get ' : 
    Int64 MemoryUsed 'get ' : 
    Int64 MemoryHighwater 'get ' : 
    System.String DefineConstants 'get ' : 
    System.String SQLiteVersion 'get ' : 
    System.String SQLiteSourceId 'get ' : 
    System.String SQLiteCompileOptions 'get ' : 
    System.String InteropVersion 'get ' : 
    System.String InteropSourceId 'get ' : 
    System.String InteropCompileOptions 'get ' : 
    System.String ProviderVersion 'get ' : 
    System.String ProviderSourceId 'get ' : 
    System.Data.SQLite.SQLiteConnectionFlags DefaultFlags 'get ' : 
    System.Data.SQLite.SQLiteConnectionFlags SharedFlags 'get set' : 
    System.Data.ConnectionState State 'get ' : 
    System.Data.SQLite.SQLiteTraceFlags TraceFlags 'get set' : 
  Events:
    System.Data.SQLite.SQLiteConnectionEventHandler _handlers: 
    System.Data.SQLite.SQLiteBusyEventHandler _busyHandler: 
    System.Data.SQLite.SQLiteProgressEventHandler _progressHandler: 
    System.Data.SQLite.SQLiteAuthorizerEventHandler _authorizerHandler: 
    System.Data.SQLite.SQLiteUpdateEventHandler _updateHandler: 
    System.Data.SQLite.SQLiteCommitHandler _commitHandler: 
    System.Data.SQLite.SQLiteTraceEventHandler _traceHandler: 
    System.Data.SQLite.SQLiteTraceEventHandler _traceHandler2: 
    System.EventHandler _rollbackHandler: 
    System.Data.StateChangeEventHandler StateChange: 
    System.Data.SQLite.SQLiteConnectionEventHandler Changed: 
    System.Data.SQLite.SQLiteBusyEventHandler Busy: 
    System.Data.SQLite.SQLiteProgressEventHandler Progress: 
    System.Data.SQLite.SQLiteAuthorizerEventHandler Authorize: 
    System.Data.SQLite.SQLiteUpdateEventHandler Update: 
    System.Data.SQLite.SQLiteCommitHandler Commit: 
    System.Data.SQLite.SQLiteTraceEventHandler Trace: 
    System.Data.SQLite.SQLiteTraceEventHandler Trace2: 
    System.EventHandler RollBack: 
  Methods:
    get_DefaultDbType(): PrivateScope, Public, HideBySig, SpecialName
    set_DefaultDbType(Nullable`1): PrivateScope, Public, HideBySig, SpecialName
    get_DefaultTypeName(): PrivateScope, Public, HideBySig, SpecialName
    set_DefaultTypeName(String): PrivateScope, Public, HideBySig, SpecialName
    get_VfsName(): PrivateScope, Public, HideBySig, SpecialName
    set_VfsName(String): PrivateScope, Public, HideBySig, SpecialName
    get_OwnHandle(): PrivateScope, Public, HideBySig, SpecialName
    get_ServerVersion(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_LastInsertRowId(): PrivateScope, Public, HideBySig, SpecialName
    Cancel(): PrivateScope, Public, HideBySig
    IsCanceled(): PrivateScope, Public, HideBySig
    get_Changes(): PrivateScope, Public, HideBySig, SpecialName
    IsReadOnly(String): PrivateScope, Public, HideBySig
    get_AutoCommit(): PrivateScope, Public, HideBySig, SpecialName
    get_MemoryUsed(): PrivateScope, Public, HideBySig, SpecialName
    get_MemoryHighwater(): PrivateScope, Public, HideBySig, SpecialName
    GetMemoryStatistics(IDictionary`2&): PrivateScope, Public, Static, HideBySig
    ReleaseMemory(): PrivateScope, Public, HideBySig
    ReleaseMemory(Int32, Boolean, Boolean, Int32&, Boolean&, UInt32&): PrivateScope, Public, Static, HideBySig
    SetMemoryStatus(Boolean): PrivateScope, Public, Static, HideBySig
    get_DefineConstants(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_SQLiteVersion(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_SQLiteSourceId(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_SQLiteCompileOptions(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_InteropVersion(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_InteropSourceId(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_InteropCompileOptions(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_ProviderVersion(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_ProviderSourceId(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_DefaultFlags(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_SharedFlags(): PrivateScope, Public, Static, HideBySig, SpecialName
    set_SharedFlags(SQLiteConnectionFlags): PrivateScope, Public, Static, HideBySig, SpecialName
    get_State(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Shutdown(): PrivateScope, Public, HideBySig
    Shutdown(Boolean, Boolean): PrivateScope, Public, Static, HideBySig
    SetExtendedResultCodes(Boolean): PrivateScope, Public, HideBySig
    ResultCode(): PrivateScope, Public, HideBySig
    ExtendedResultCode(): PrivateScope, Public, HideBySig
    LogMessage(SQLiteErrorCode, String): PrivateScope, Public, HideBySig
    LogMessage(Int32, String): PrivateScope, Public, HideBySig
    ChangePassword(String): PrivateScope, Public, HideBySig
    ChangePassword(Byte[]): PrivateScope, Public, HideBySig
    SetPassword(String): PrivateScope, Public, HideBySig
    SetPassword(Byte[]): PrivateScope, Public, HideBySig
    SetAvRetry(Int32&, Int32&): PrivateScope, Public, HideBySig
    SetChunkSize(Int32): PrivateScope, Public, HideBySig
    GetSchema(): PrivateScope, Public, Virtual, HideBySig
    GetSchema(String): PrivateScope, Public, Virtual, HideBySig
    GetSchema(String, String[]): PrivateScope, Public, Virtual, HideBySig
    add_Busy(SQLiteBusyEventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_Busy(SQLiteBusyEventHandler): PrivateScope, Public, HideBySig, SpecialName
    add_Progress(SQLiteProgressEventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_Progress(SQLiteProgressEventHandler): PrivateScope, Public, HideBySig, SpecialName
    add_Authorize(SQLiteAuthorizerEventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_Authorize(SQLiteAuthorizerEventHandler): PrivateScope, Public, HideBySig, SpecialName
    add_Update(SQLiteUpdateEventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_Update(SQLiteUpdateEventHandler): PrivateScope, Public, HideBySig, SpecialName
    add_Commit(SQLiteCommitHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_Commit(SQLiteCommitHandler): PrivateScope, Public, HideBySig, SpecialName
    add_Trace(SQLiteTraceEventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_Trace(SQLiteTraceEventHandler): PrivateScope, Public, HideBySig, SpecialName
    add_Trace2(SQLiteTraceEventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_Trace2(SQLiteTraceEventHandler): PrivateScope, Public, HideBySig, SpecialName
    get_TraceFlags(): PrivateScope, Public, HideBySig, SpecialName
    set_TraceFlags(SQLiteTraceFlags): PrivateScope, Public, HideBySig, SpecialName
    add_RollBack(EventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_RollBack(EventHandler): PrivateScope, Public, HideBySig, SpecialName
    GetFlags(SQLiteConnection): PrivateScope, Assembly, Static, HideBySig
    add_StateChange(StateChangeEventHandler): PrivateScope, Public, Virtual, HideBySig, SpecialName
    remove_StateChange(StateChangeEventHandler): PrivateScope, Public, Virtual, HideBySig, SpecialName
    GetCriticalHandle(): PrivateScope, Public, HideBySig
    CreatePool(String, Object): PrivateScope, Public, Static, HideBySig
    OnChanged(SQLiteConnection, ConnectionEventArgs): PrivateScope, Assembly, Static, HideBySig
    add_Changed(SQLiteConnectionEventHandler): PrivateScope, Public, Static, HideBySig, SpecialName
    remove_Changed(SQLiteConnectionEventHandler): PrivateScope, Public, Static, HideBySig, SpecialName
    get_ConnectionPool(): PrivateScope, Public, Static, HideBySig, SpecialName
    set_ConnectionPool(ISQLiteConnectionPool): PrivateScope, Public, Static, HideBySig, SpecialName
    CreateHandle(IntPtr): PrivateScope, Public, Static, HideBySig
    BackupDatabase(SQLiteConnection, String, String, Int32, SQLiteBackupCallback, Int32): PrivateScope, Public, HideBySig
    ClearCachedSettings(): PrivateScope, Public, HideBySig
    TryGetCachedSetting(String, Object, Object&(Out)): PrivateScope, Assembly, HideBySig
    SetCachedSetting(String, Object): PrivateScope, Assembly, HideBySig
    ClearTypeMappings(): PrivateScope, Public, HideBySig
    GetTypeMappings(): PrivateScope, Public, HideBySig
    AddTypeMapping(String, DbType, Boolean): PrivateScope, Public, HideBySig
    ClearTypeCallbacks(): PrivateScope, Public, HideBySig
    TryGetTypeCallbacks(String, SQLiteTypeCallbacks&(Out)): PrivateScope, Public, HideBySig
    SetTypeCallbacks(String, SQLiteTypeCallbacks): PrivateScope, Public, HideBySig
    BindFunction(SQLiteFunctionAttribute, SQLiteFunction): PrivateScope, Public, HideBySig
    BindFunction(SQLiteFunctionAttribute, Delegate, Delegate): PrivateScope, Public, HideBySig
    UnbindFunction(SQLiteFunctionAttribute): PrivateScope, Public, HideBySig
    UnbindAllFunctions(Boolean): PrivateScope, Public, HideBySig
    Check(SQLiteConnection): PrivateScope, Assembly, Static, HideBySig
    ParseConnectionString(String, Boolean, Boolean, Boolean): PrivateScope, Assembly, Static, HideBySig
    ParseConnectionString(SQLiteConnection, String, Boolean, Boolean, Boolean): PrivateScope, Public, Static, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Clone(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CreateFile(String): PrivateScope, Public, Static, HideBySig
    OnStateChange(ConnectionState, StateChangeEventArgs&): PrivateScope, Assembly, HideBySig
    GetDefaultIsolationLevel(): PrivateScope, Assembly, HideBySig
    BeginTransaction(IsolationLevel, Boolean): PrivateScope, Public, HideBySig (Obsolete)
    BeginTransaction(Boolean): PrivateScope, Public, HideBySig (Obsolete)
    BeginTransaction(IsolationLevel): PrivateScope, Public, HideBySig
    BeginTransaction(): PrivateScope, Public, HideBySig
    ChangeDatabase(String): PrivateScope, Public, Virtual, HideBySig
    Close(): PrivateScope, Public, Virtual, HideBySig
    get_PoolCount(): PrivateScope, Public, HideBySig, SpecialName
    get_CreateCount(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_OpenCount(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_CloseCount(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_DisposeCount(): PrivateScope, Public, Static, HideBySig, SpecialName
    ClearPool(SQLiteConnection): PrivateScope, Public, Static, HideBySig
    ClearAllPools(): PrivateScope, Public, Static, HideBySig
    get_ConnectionString(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_ConnectionString(String): PrivateScope, Public, Virtual, HideBySig, SpecialName
    CreateCommand(): PrivateScope, Public, HideBySig
    CreateSession(String): PrivateScope, Public, HideBySig
    CreateChangeSet(Byte[]): PrivateScope, Public, HideBySig
    CreateChangeSet(Byte[], SQLiteChangeSetStartFlags): PrivateScope, Public, HideBySig
    CreateChangeSet(Stream, Stream): PrivateScope, Public, HideBySig
    CreateChangeSet(Stream, Stream, SQLiteChangeSetStartFlags): PrivateScope, Public, HideBySig
    CreateChangeGroup(): PrivateScope, Public, HideBySig
    get_DataSource(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_FileName(): PrivateScope, Public, HideBySig, SpecialName
    get_Database(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    MapUriPath(String): PrivateScope, Assembly, Static, HideBySig
    EnlistTransaction(Transaction): PrivateScope, Public, Virtual, HideBySig
    WaitForEnlistmentReset(Int32, Nullable`1): PrivateScope, Public, HideBySig
    FindKey(SortedList`2, String, String): PrivateScope, Assembly, Static, HideBySig
    TryParseEnum(Type, String, Boolean): PrivateScope, Assembly, Static, HideBySig
    SetLimitOption(SQLiteLimitOpsEnum, Int32): PrivateScope, Public, HideBySig
    SetConfigurationOption(SQLiteConfigDbOpsEnum, Object): PrivateScope, Public, HideBySig
    EnableExtensions(Boolean): PrivateScope, Public, HideBySig
    LoadExtension(String): PrivateScope, Public, HideBySig
    LoadExtension(String, String): PrivateScope, Public, HideBySig
    CreateModule(SQLiteModule): PrivateScope, Public, HideBySig
    FromHexString(String): PrivateScope, Assembly, Static, HideBySig
    ToHexString(Byte[]): PrivateScope, Assembly, Static, HideBySig
    Open(): PrivateScope, Public, Virtual, HideBySig
    OpenAndReturn(): PrivateScope, Public, HideBySig
    get_DefaultTimeout(): PrivateScope, Public, HideBySig, SpecialName
    set_DefaultTimeout(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_DefaultMaximumSleepTime(): PrivateScope, Public, HideBySig, SpecialName
    set_DefaultMaximumSleepTime(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_BusyTimeout(): PrivateScope, Public, HideBySig, SpecialName
    set_BusyTimeout(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_WaitTimeout(): PrivateScope, Public, HideBySig, SpecialName
    set_WaitTimeout(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_PrepareRetries(): PrivateScope, Public, HideBySig, SpecialName
    set_PrepareRetries(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_StepRetries(): PrivateScope, Public, HideBySig, SpecialName
    set_StepRetries(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_ProgressOps(): PrivateScope, Public, HideBySig, SpecialName
    set_ProgressOps(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_ParseViaFramework(): PrivateScope, Public, HideBySig, SpecialName
    set_ParseViaFramework(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Flags(): PrivateScope, Public, HideBySig, SpecialName
    set_Flags(SQLiteConnectionFlags): PrivateScope, Public, HideBySig, SpecialName
Struct System.Data.SQLite.SynchronizationModes: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Data.SQLite.SynchronizationModes Normal = 0 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SynchronizationModes Full = 1 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SynchronizationModes Off = 2 : Public, Static, Literal, HasDefault
Class System.Data.SQLite.SQLiteBusyCallback: AutoLayout, AnsiClass, Class, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(IntPtr, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(IntPtr, Int32, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class System.Data.SQLite.SQLiteProgressCallback: AutoLayout, AnsiClass, Class, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(IntPtr, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class System.Data.SQLite.SQLiteAuthorizerCallback: AutoLayout, AnsiClass, Class, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(IntPtr, SQLiteAuthorizerActionCode, IntPtr, IntPtr, IntPtr, IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(IntPtr, SQLiteAuthorizerActionCode, IntPtr, IntPtr, IntPtr, IntPtr, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class System.Data.SQLite.SQLiteUpdateCallback: AutoLayout, AnsiClass, Class, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(IntPtr, Int32, IntPtr, IntPtr, Int64): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(IntPtr, Int32, IntPtr, IntPtr, Int64, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class System.Data.SQLite.SQLiteCommitCallback: AutoLayout, AnsiClass, Class, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(IntPtr, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class System.Data.SQLite.SQLiteTraceCallback: AutoLayout, AnsiClass, Class, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(IntPtr, IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(IntPtr, IntPtr, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class System.Data.SQLite.SQLiteTraceCallback2: AutoLayout, AnsiClass, Class, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(SQLiteTraceFlags, IntPtr, IntPtr, IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(SQLiteTraceFlags, IntPtr, IntPtr, IntPtr, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class System.Data.SQLite.SQLiteRollbackCallback: AutoLayout, AnsiClass, Class, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(IntPtr, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class System.Data.SQLite.SQLiteBusyEventHandler: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(Object, BusyEventArgs): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(Object, BusyEventArgs, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class System.Data.SQLite.SQLiteProgressEventHandler: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(Object, ProgressEventArgs): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(Object, ProgressEventArgs, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class System.Data.SQLite.SQLiteAuthorizerEventHandler: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(Object, AuthorizerEventArgs): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(Object, AuthorizerEventArgs, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class System.Data.SQLite.SQLiteCommitHandler: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(Object, CommitEventArgs): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(Object, CommitEventArgs, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class System.Data.SQLite.SQLiteUpdateEventHandler: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(Object, UpdateEventArgs): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(Object, UpdateEventArgs, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class System.Data.SQLite.SQLiteTraceEventHandler: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(Object, TraceEventArgs): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(Object, TraceEventArgs, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class System.Data.SQLite.SQLiteBackupCallback: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(SQLiteConnection, String, SQLiteConnection, String, Int32, Int32, Int32, Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(SQLiteConnection, String, SQLiteConnection, String, Int32, Int32, Int32, Boolean, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class System.Data.SQLite.BusyEventArgs: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.EventArgs
    Void .ctor(IntPtr, Int32, System.Data.SQLite.SQLiteBusyReturnCode): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    IntPtr UserData : Public, InitOnly
    Int32 Count : Public, InitOnly
    System.Data.SQLite.SQLiteBusyReturnCode ReturnCode : Public
Class System.Data.SQLite.ProgressEventArgs: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.EventArgs
    Void .ctor(IntPtr, System.Data.SQLite.SQLiteProgressReturnCode): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    IntPtr UserData : Public, InitOnly
    System.Data.SQLite.SQLiteProgressReturnCode ReturnCode : Public
Class System.Data.SQLite.AuthorizerEventArgs: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.EventArgs
    Void .ctor(IntPtr, System.Data.SQLite.SQLiteAuthorizerActionCode, System.String, System.String, System.String, System.String, System.Data.SQLite.SQLiteAuthorizerReturnCode): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    IntPtr UserData : Public, InitOnly
    System.Data.SQLite.SQLiteAuthorizerActionCode ActionCode : Public, InitOnly
    System.String Argument1 : Public, InitOnly
    System.String Argument2 : Public, InitOnly
    System.String Database : Public, InitOnly
    System.String Context : Public, InitOnly
    System.Data.SQLite.SQLiteAuthorizerReturnCode ReturnCode : Public
Struct System.Data.SQLite.UpdateEventType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Data.SQLite.UpdateEventType Delete = 9 : Public, Static, Literal, HasDefault
    System.Data.SQLite.UpdateEventType Insert = 18 : Public, Static, Literal, HasDefault
    System.Data.SQLite.UpdateEventType Update = 23 : Public, Static, Literal, HasDefault
Class System.Data.SQLite.UpdateEventArgs: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.EventArgs
    Void .ctor(System.String, System.String, System.Data.SQLite.UpdateEventType, Int64): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.String Database : Public, InitOnly
    System.String Table : Public, InitOnly
    System.Data.SQLite.UpdateEventType Event : Public, InitOnly
    Int64 RowId : Public, InitOnly
Class System.Data.SQLite.CommitEventArgs: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.EventArgs
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    Boolean AbortTransaction : Public
Class System.Data.SQLite.TraceEventArgs: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.EventArgs
    Void .ctor(System.String): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Nullable`1[System.Data.SQLite.SQLiteTraceFlags], System.Nullable`1[System.IntPtr], System.Nullable`1[System.IntPtr], System.String, System.Nullable`1[System.Int64]): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.Nullable`1[System.Data.SQLite.SQLiteTraceFlags] Flags : Public, InitOnly
    System.Nullable`1[System.IntPtr] DatabaseConnection : Public, InitOnly
    System.Nullable`1[System.IntPtr] PreparedStatement : Public, InitOnly
    System.String Statement : Public, InitOnly
    System.Nullable`1[System.Int64] Elapsed : Public, InitOnly
Interface System.Data.SQLite.ISQLiteConnectionPool: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    GetCounts(String, Dictionary`2&, Int32&, Int32&, Int32&): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ClearPool(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ClearAllPools(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Add(String, Object, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Remove(String, Int32, Int32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface System.Data.SQLite.ISQLiteConnectionPool2: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    System.Data.SQLite.ISQLiteConnectionPool
  Methods:
    Initialize(Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Terminate(Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetCounts(Int32&, Int32&): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ResetCounts(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class System.Data.SQLite.WeakConnectionPool: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Data.SQLite.ISQLiteConnectionPool2
    System.Data.SQLite.ISQLiteConnectionPool
  Methods:
    GetCounts(String, Dictionary`2&, Int32&, Int32&, Int32&): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ClearPool(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ClearAllPools(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Add(String, Object, Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Remove(String, Int32, Int32&(Out)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Initialize(Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Terminate(Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetCounts(Int32&, Int32&): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ResetCounts(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class System.Data.SQLite.StrongConnectionPool: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Data.SQLite.ISQLiteConnectionPool2
    System.Data.SQLite.ISQLiteConnectionPool
  Methods:
    GetCounts(String, Dictionary`2&, Int32&, Int32&, Int32&): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ClearPool(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ClearAllPools(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Add(String, Object, Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Remove(String, Int32, Int32&(Out)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Initialize(Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Terminate(Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetCounts(Int32&, Int32&): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ResetCounts(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class System.Data.SQLite.PoolQueue`1[T]: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  Type parameter: T
    Void .ctor(Int32, Int32): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.Collections.Generic.Queue`1[T] Queue : Assembly, InitOnly
    Int32 PoolVersion : Assembly
    Int32 MaxPoolSize : Assembly
Class System.Data.SQLite.SQLiteConnectionPool: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    GetCounts(String, Dictionary`2&, Int32&, Int32&, Int32&): PrivateScope, Public, Static, HideBySig
    ClearPool(String): PrivateScope, Public, Static, HideBySig
    ClearAllPools(): PrivateScope, Public, Static, HideBySig
    Add(String, SQLiteConnectionHandle, Int32): PrivateScope, Public, Static, HideBySig
    Remove(String, Int32, Int32&(Out)): PrivateScope, Public, Static, HideBySig
    Initialize(Object): PrivateScope, Public, Static, HideBySig
    Terminate(Object): PrivateScope, Public, Static, HideBySig
    GetCounts(Int32&, Int32&): PrivateScope, Public, Static, HideBySig
    ResetCounts(): PrivateScope, Public, Static, HideBySig
    CreateAndInitialize(Object, Boolean, Boolean): PrivateScope, Public, Static, HideBySig
    TerminateAndReset(Object): PrivateScope, Public, Static, HideBySig
    GetConnectionPool(): PrivateScope, Public, Static, HideBySig
    SetConnectionPool(ISQLiteConnectionPool): PrivateScope, Public, Static, HideBySig
Class System.Data.SQLite.StaticWeakConnectionPool`1[T]: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Type parameter: T, System.WeakReference
  Methods:
    GetCounts(String, Dictionary`2&, Int32&, Int32&, Int32&): PrivateScope, Public, Static, HideBySig
    ClearPool(String): PrivateScope, Public, Static, HideBySig
    ClearAllPools(): PrivateScope, Public, Static, HideBySig
    Add(String, SQLiteConnectionHandle, Int32): PrivateScope, Public, Static, HideBySig
    Remove(String, Int32, Int32&(Out)): PrivateScope, Public, Static, HideBySig
    ResetCounts(): PrivateScope, Public, Static, HideBySig
    GetCounts(Int32&, Int32&): PrivateScope, Public, Static, HideBySig
Class System.Data.SQLite.StaticStrongConnectionPool`1[T]: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Type parameter: T,  ReferenceType
  Methods:
    GetCounts(String, Dictionary`2&, Int32&, Int32&, Int32&): PrivateScope, Public, Static, HideBySig
    ClearPool(String): PrivateScope, Public, Static, HideBySig
    ClearAllPools(): PrivateScope, Public, Static, HideBySig
    Add(String, SQLiteConnectionHandle, Int32): PrivateScope, Public, Static, HideBySig
    Remove(String, Int32, Int32&(Out)): PrivateScope, Public, Static, HideBySig
    ResetCounts(): PrivateScope, Public, Static, HideBySig
    GetCounts(Int32&, Int32&): PrivateScope, Public, Static, HideBySig
Class System.Data.SQLite.SQLiteConnectionStringBuilder: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Data.Common.DbConnectionStringBuilder
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Version 'get set' : 
    System.Data.SQLite.SynchronizationModes SyncMode 'get set' : 
    Boolean UseUTF16Encoding 'get set' : 
    Boolean Pooling 'get set' : 
    Boolean BinaryGUID 'get set' : 
    System.String DataSource 'get set' : 
    System.String Uri 'get set' : 
    System.String FullUri 'get set' : 
    Int32 DefaultTimeout 'get set' : 
    Int32 DefaultMaximumSleepTime 'get set' : 
    Int32 BusyTimeout 'get set' : 
    Int32 WaitTimeout 'get set' : 
    Int32 PrepareRetries 'get set' : 
    Int32 StepRetries 'get set' : 
    Int32 ProgressOps 'get set' : 
    Boolean Enlist 'get set' : 
    Boolean FailIfMissing 'get set' : 
    Boolean LegacyFormat 'get set' : 
    Boolean ReadOnly 'get set' : 
    System.String Password 'get set' : 
    Byte[] HexPassword 'get set' : 
    System.String TextPassword 'get set' : 
    Byte[] TextHexPassword 'get set' : 
    Int32 PageSize 'get set' : 
    Int32 MaxPageCount 'get set' : 
    Int32 CacheSize 'get set' : 
    System.Data.SQLite.SQLiteDateFormats DateTimeFormat 'get set' : 
    System.DateTimeKind DateTimeKind 'get set' : 
    System.String DateTimeFormatString 'get set' : 
    System.String BaseSchemaName 'get set' : 
    System.Data.SQLite.SQLiteJournalModeEnum JournalMode 'get set' : 
    System.Data.IsolationLevel DefaultIsolationLevel 'get set' : 
    System.Data.DbType DefaultDbType 'get set' : 
    System.String DefaultTypeName 'get set' : 
    System.String VfsName 'get set' : 
    Boolean ForeignKeys 'get set' : 
    Boolean RecursiveTriggers 'get set' : 
    System.String ZipVfsVersion 'get set' : 
    System.Data.SQLite.SQLiteConnectionFlags Flags 'get set' : 
    Boolean SetDefaults 'get set' : 
    Boolean ToFullPath 'get set' : 
    Boolean NoDefaultFlags 'get set' : 
    Boolean NoSharedFlags 'get set' : 
  Methods:
    get_Version(): PrivateScope, Public, HideBySig, SpecialName
    set_Version(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_SyncMode(): PrivateScope, Public, HideBySig, SpecialName
    set_SyncMode(SynchronizationModes): PrivateScope, Public, HideBySig, SpecialName
    get_UseUTF16Encoding(): PrivateScope, Public, HideBySig, SpecialName
    set_UseUTF16Encoding(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Pooling(): PrivateScope, Public, HideBySig, SpecialName
    set_Pooling(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_BinaryGUID(): PrivateScope, Public, HideBySig, SpecialName
    set_BinaryGUID(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_DataSource(): PrivateScope, Public, HideBySig, SpecialName
    set_DataSource(String): PrivateScope, Public, HideBySig, SpecialName
    get_Uri(): PrivateScope, Public, HideBySig, SpecialName
    set_Uri(String): PrivateScope, Public, HideBySig, SpecialName
    get_FullUri(): PrivateScope, Public, HideBySig, SpecialName
    set_FullUri(String): PrivateScope, Public, HideBySig, SpecialName
    get_DefaultTimeout(): PrivateScope, Public, HideBySig, SpecialName
    set_DefaultTimeout(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_DefaultMaximumSleepTime(): PrivateScope, Public, HideBySig, SpecialName
    set_DefaultMaximumSleepTime(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_BusyTimeout(): PrivateScope, Public, HideBySig, SpecialName
    set_BusyTimeout(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_WaitTimeout(): PrivateScope, Public, HideBySig, SpecialName
    set_WaitTimeout(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_PrepareRetries(): PrivateScope, Public, HideBySig, SpecialName
    set_PrepareRetries(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_StepRetries(): PrivateScope, Public, HideBySig, SpecialName
    set_StepRetries(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_ProgressOps(): PrivateScope, Public, HideBySig, SpecialName
    set_ProgressOps(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Enlist(): PrivateScope, Public, HideBySig, SpecialName
    set_Enlist(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_FailIfMissing(): PrivateScope, Public, HideBySig, SpecialName
    set_FailIfMissing(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_LegacyFormat(): PrivateScope, Public, HideBySig, SpecialName
    set_LegacyFormat(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_ReadOnly(): PrivateScope, Public, HideBySig, SpecialName
    set_ReadOnly(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Password(): PrivateScope, Public, HideBySig, SpecialName
    set_Password(String): PrivateScope, Public, HideBySig, SpecialName
    get_HexPassword(): PrivateScope, Public, HideBySig, SpecialName
    set_HexPassword(Byte[]): PrivateScope, Public, HideBySig, SpecialName
    get_TextPassword(): PrivateScope, Public, HideBySig, SpecialName
    set_TextPassword(String): PrivateScope, Public, HideBySig, SpecialName
    get_TextHexPassword(): PrivateScope, Public, HideBySig, SpecialName
    set_TextHexPassword(Byte[]): PrivateScope, Public, HideBySig, SpecialName
    get_PageSize(): PrivateScope, Public, HideBySig, SpecialName
    set_PageSize(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_MaxPageCount(): PrivateScope, Public, HideBySig, SpecialName
    set_MaxPageCount(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_CacheSize(): PrivateScope, Public, HideBySig, SpecialName
    set_CacheSize(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_DateTimeFormat(): PrivateScope, Public, HideBySig, SpecialName
    set_DateTimeFormat(SQLiteDateFormats): PrivateScope, Public, HideBySig, SpecialName
    get_DateTimeKind(): PrivateScope, Public, HideBySig, SpecialName
    set_DateTimeKind(DateTimeKind): PrivateScope, Public, HideBySig, SpecialName
    get_DateTimeFormatString(): PrivateScope, Public, HideBySig, SpecialName
    set_DateTimeFormatString(String): PrivateScope, Public, HideBySig, SpecialName
    get_BaseSchemaName(): PrivateScope, Public, HideBySig, SpecialName
    set_BaseSchemaName(String): PrivateScope, Public, HideBySig, SpecialName
    get_JournalMode(): PrivateScope, Public, HideBySig, SpecialName
    set_JournalMode(SQLiteJournalModeEnum): PrivateScope, Public, HideBySig, SpecialName
    get_DefaultIsolationLevel(): PrivateScope, Public, HideBySig, SpecialName
    set_DefaultIsolationLevel(IsolationLevel): PrivateScope, Public, HideBySig, SpecialName
    get_DefaultDbType(): PrivateScope, Public, HideBySig, SpecialName
    set_DefaultDbType(DbType): PrivateScope, Public, HideBySig, SpecialName
    get_DefaultTypeName(): PrivateScope, Public, HideBySig, SpecialName
    set_DefaultTypeName(String): PrivateScope, Public, HideBySig, SpecialName
    get_VfsName(): PrivateScope, Public, HideBySig, SpecialName
    set_VfsName(String): PrivateScope, Public, HideBySig, SpecialName
    get_ForeignKeys(): PrivateScope, Public, HideBySig, SpecialName
    set_ForeignKeys(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_RecursiveTriggers(): PrivateScope, Public, HideBySig, SpecialName
    set_RecursiveTriggers(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_ZipVfsVersion(): PrivateScope, Public, HideBySig, SpecialName
    set_ZipVfsVersion(String): PrivateScope, Public, HideBySig, SpecialName
    get_Flags(): PrivateScope, Public, HideBySig, SpecialName
    set_Flags(SQLiteConnectionFlags): PrivateScope, Public, HideBySig, SpecialName
    get_SetDefaults(): PrivateScope, Public, HideBySig, SpecialName
    set_SetDefaults(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_ToFullPath(): PrivateScope, Public, HideBySig, SpecialName
    set_ToFullPath(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_NoDefaultFlags(): PrivateScope, Public, HideBySig, SpecialName
    set_NoDefaultFlags(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_NoSharedFlags(): PrivateScope, Public, HideBySig, SpecialName
    set_NoSharedFlags(Boolean): PrivateScope, Public, HideBySig, SpecialName
    TryGetValue(String, Object&(Out)): PrivateScope, Public, Virtual, HideBySig
Class System.Data.SQLite.SQLiteConvert: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
    Void .ctor(System.Data.SQLite.SQLiteDateFormats, System.DateTimeKind, System.String): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.Data.SQLite.SQLiteDateFormats _datetimeFormat : Assembly
    System.DateTimeKind _datetimeKind : Assembly
    System.String _datetimeFormatString : Assembly
    Char[] SpecialChars : Assembly, Static, InitOnly
    Char EscapeChar = \ : Assembly, Static, Literal, HasDefault
    Char QuoteChar = " : Assembly, Static, Literal, HasDefault
    Char AltQuoteChar = ' : Assembly, Static, Literal, HasDefault
    Char ValueChar = = : Assembly, Static, Literal, HasDefault
    Char PairChar = ; : Assembly, Static, Literal, HasDefault
  Methods:
    ToUTF8(String): PrivateScope, Public, Static, HideBySig
    ToUTF8(DateTime): PrivateScope, Public, HideBySig
    ToString(IntPtr, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    UTF8ToString(IntPtr, Int32): PrivateScope, Public, Static, HideBySig
    ToDateTime(String): PrivateScope, Public, HideBySig
    ToDateTime(String, SQLiteDateFormats, DateTimeKind, String): PrivateScope, Public, Static, HideBySig
    ToDateTime(Double): PrivateScope, Public, HideBySig
    ToDateTime(Double, DateTimeKind): PrivateScope, Public, Static, HideBySig
    UnixEpochToDateTime(Int64, DateTimeKind): PrivateScope, Assembly, Static, HideBySig
    TicksToDateTime(Int64, DateTimeKind): PrivateScope, Assembly, Static, HideBySig
    ToJulianDay(Nullable`1): PrivateScope, Public, Static, HideBySig
    ToUnixEpoch(DateTime): PrivateScope, Public, Static, HideBySig
    ToString(DateTime): PrivateScope, Public, HideBySig
    ToString(DateTime, SQLiteDateFormats, DateTimeKind, String): PrivateScope, Public, Static, HideBySig
    ToDateTime(IntPtr, Int32): PrivateScope, Assembly, HideBySig
    Split(String, Char): PrivateScope, Public, Static, HideBySig
    NewSplit(String, Char, Boolean, String&): PrivateScope, Assembly, Static, HideBySig
    ToStringWithProvider(Object, IFormatProvider): PrivateScope, Public, Static, HideBySig
    ToBoolean(Object, IFormatProvider, Boolean): PrivateScope, Assembly, Static, HideBySig
    ToBoolean(Object): PrivateScope, Public, Static, HideBySig
    ToString(Int32): PrivateScope, Assembly, Static, HideBySig
    ToBoolean(String): PrivateScope, Public, Static, HideBySig
    SQLiteTypeToType(SQLiteType): PrivateScope, Assembly, Static, HideBySig
    TypeToDbType(Type): PrivateScope, Assembly, Static, HideBySig
    DbTypeToColumnSize(DbType): PrivateScope, Assembly, Static, HideBySig
    DbTypeToNumericPrecision(DbType): PrivateScope, Assembly, Static, HideBySig
    DbTypeToNumericScale(DbType): PrivateScope, Assembly, Static, HideBySig
    DbTypeToTypeName(SQLiteConnection, DbType, SQLiteConnectionFlags): PrivateScope, Assembly, Static, HideBySig
    DbTypeToType(DbType): PrivateScope, Assembly, Static, HideBySig
    TypeToAffinity(Type, SQLiteConnectionFlags): PrivateScope, Assembly, Static, HideBySig
    IsStringDbType(DbType): PrivateScope, Assembly, Static, HideBySig
    GetStringOrNull(Object): PrivateScope, Public, Static, HideBySig
    LooksLikeNull(String): PrivateScope, Assembly, Static, HideBySig
    LooksLikeInt64(String): PrivateScope, Assembly, Static, HideBySig
    LooksLikeDouble(String): PrivateScope, Assembly, Static, HideBySig
    LooksLikeDateTime(SQLiteConvert, String): PrivateScope, Assembly, Static, HideBySig
    TypeNameToDbType(SQLiteConnection, String, SQLiteConnectionFlags): PrivateScope, Assembly, Static, HideBySig
Struct System.Data.SQLite.TypeAffinity: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Data.SQLite.TypeAffinity Uninitialized = 0 : Public, Static, Literal, HasDefault
    System.Data.SQLite.TypeAffinity Int64 = 1 : Public, Static, Literal, HasDefault
    System.Data.SQLite.TypeAffinity Double = 2 : Public, Static, Literal, HasDefault
    System.Data.SQLite.TypeAffinity Text = 3 : Public, Static, Literal, HasDefault
    System.Data.SQLite.TypeAffinity Blob = 4 : Public, Static, Literal, HasDefault
    System.Data.SQLite.TypeAffinity Null = 5 : Public, Static, Literal, HasDefault
    System.Data.SQLite.TypeAffinity DateTime = 10 : Public, Static, Literal, HasDefault
    System.Data.SQLite.TypeAffinity None = 11 : Public, Static, Literal, HasDefault
Struct System.Data.SQLite.SQLiteConnectionEventType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Data.SQLite.SQLiteConnectionEventType Invalid = -1 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteConnectionEventType Unknown = 0 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteConnectionEventType Opening = 1 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteConnectionEventType ConnectionString = 2 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteConnectionEventType Opened = 3 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteConnectionEventType ChangeDatabase = 4 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteConnectionEventType NewTransaction = 5 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteConnectionEventType EnlistTransaction = 6 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteConnectionEventType NewCommand = 7 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteConnectionEventType NewDataReader = 8 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteConnectionEventType NewCriticalHandle = 9 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteConnectionEventType Closing = 10 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteConnectionEventType Closed = 11 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteConnectionEventType DisposingCommand = 12 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteConnectionEventType DisposingDataReader = 13 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteConnectionEventType ClosingDataReader = 14 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteConnectionEventType OpenedFromPool = 15 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteConnectionEventType ClosedToPool = 16 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteConnectionEventType DisposingConnection = 17 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteConnectionEventType DisposedConnection = 18 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteConnectionEventType FinalizingConnection = 19 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteConnectionEventType FinalizedConnection = 20 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteConnectionEventType NothingToDo = 21 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteConnectionEventType ConnectionStringPreview = 22 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteConnectionEventType SqlStringPreview = 23 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteConnectionEventType Canceled = 24 : Public, Static, Literal, HasDefault
Struct System.Data.SQLite.SQLiteDateFormats: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Data.SQLite.SQLiteDateFormats Ticks = 0 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteDateFormats ISO8601 = 1 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteDateFormats JulianDay = 2 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteDateFormats UnixEpoch = 3 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteDateFormats InvariantCulture = 4 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteDateFormats CurrentCulture = 5 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteDateFormats Default = 1 : Public, Static, Literal, HasDefault
Struct System.Data.SQLite.SQLiteJournalModeEnum: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Data.SQLite.SQLiteJournalModeEnum Default = -1 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteJournalModeEnum Delete = 0 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteJournalModeEnum Persist = 1 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteJournalModeEnum Off = 2 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteJournalModeEnum Truncate = 3 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteJournalModeEnum Memory = 4 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteJournalModeEnum Wal = 5 : Public, Static, Literal, HasDefault
Struct System.Data.SQLite.SQLiteSynchronousEnum: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Data.SQLite.SQLiteSynchronousEnum Default = -1 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteSynchronousEnum Off = 0 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteSynchronousEnum Normal = 1 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteSynchronousEnum Full = 2 : Public, Static, Literal, HasDefault
Struct System.Data.SQLite.SQLiteExecuteType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Data.SQLite.SQLiteExecuteType None = 0 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteExecuteType NonQuery = 1 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteExecuteType Scalar = 2 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteExecuteType Reader = 3 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteExecuteType Default = 1 : Public, Static, Literal, HasDefault
Struct System.Data.SQLite.SQLiteAuthorizerActionCode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Data.SQLite.SQLiteAuthorizerActionCode None = -1 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteAuthorizerActionCode Copy = 0 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteAuthorizerActionCode CreateIndex = 1 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteAuthorizerActionCode CreateTable = 2 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteAuthorizerActionCode CreateTempIndex = 3 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteAuthorizerActionCode CreateTempTable = 4 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteAuthorizerActionCode CreateTempTrigger = 5 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteAuthorizerActionCode CreateTempView = 6 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteAuthorizerActionCode CreateTrigger = 7 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteAuthorizerActionCode CreateView = 8 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteAuthorizerActionCode Delete = 9 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteAuthorizerActionCode DropIndex = 10 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteAuthorizerActionCode DropTable = 11 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteAuthorizerActionCode DropTempIndex = 12 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteAuthorizerActionCode DropTempTable = 13 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteAuthorizerActionCode DropTempTrigger = 14 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteAuthorizerActionCode DropTempView = 15 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteAuthorizerActionCode DropTrigger = 16 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteAuthorizerActionCode DropView = 17 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteAuthorizerActionCode Insert = 18 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteAuthorizerActionCode Pragma = 19 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteAuthorizerActionCode Read = 20 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteAuthorizerActionCode Select = 21 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteAuthorizerActionCode Transaction = 22 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteAuthorizerActionCode Update = 23 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteAuthorizerActionCode Attach = 24 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteAuthorizerActionCode Detach = 25 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteAuthorizerActionCode AlterTable = 26 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteAuthorizerActionCode Reindex = 27 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteAuthorizerActionCode Analyze = 28 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteAuthorizerActionCode CreateVtable = 29 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteAuthorizerActionCode DropVtable = 30 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteAuthorizerActionCode Function = 31 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteAuthorizerActionCode Savepoint = 32 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteAuthorizerActionCode Recursive = 33 : Public, Static, Literal, HasDefault
Struct System.Data.SQLite.SQLiteBusyReturnCode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Data.SQLite.SQLiteBusyReturnCode Stop = 0 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteBusyReturnCode Retry = 1 : Public, Static, Literal, HasDefault
Struct System.Data.SQLite.SQLiteProgressReturnCode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Data.SQLite.SQLiteProgressReturnCode Continue = 0 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteProgressReturnCode Interrupt = 1 : Public, Static, Literal, HasDefault
Struct System.Data.SQLite.SQLiteAuthorizerReturnCode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Data.SQLite.SQLiteAuthorizerReturnCode Ok = 0 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteAuthorizerReturnCode Deny = 1 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteAuthorizerReturnCode Ignore = 2 : Public, Static, Literal, HasDefault
Class System.Data.SQLite.SQLiteType: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Data.SQLite.TypeAffinity, System.Data.DbType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.Data.DbType Type : Assembly
    System.Data.SQLite.TypeAffinity Affinity : Assembly
Class System.Data.SQLite.SQLiteDbTypeMap: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Collections.Generic.Dictionary`2[System.String,System.Data.SQLite.SQLiteDbTypeMapping]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Collections.Generic.IEnumerable`1[System.Data.SQLite.SQLiteDbTypeMapping]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Clear(): PrivateScope, Public, HideBySig
    Add(IEnumerable`1): PrivateScope, Public, HideBySig
    Add(SQLiteDbTypeMapping): PrivateScope, Public, HideBySig
    ContainsKey(DbType): PrivateScope, Public, HideBySig
    TryGetValue(DbType, SQLiteDbTypeMapping&(Out)): PrivateScope, Public, HideBySig
    Remove(DbType): PrivateScope, Public, HideBySig
Class System.Data.SQLite.SQLiteDbTypeMapping: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(System.String, System.Data.DbType, Boolean): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.String typeName : Assembly
    System.Data.DbType dataType : Assembly
    Boolean primary : Assembly
Class System.Data.SQLite.TypeNameStringComparer: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IEqualityComparer`1[System.String]
    System.Collections.Generic.IComparer`1[System.String]
  Methods:
    Equals(String, String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Compare(String, String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class System.Data.SQLite.SQLiteDataAdapter: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Data.Common.DbDataAdapter
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Data.SQLite.SQLiteCommand): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Data.SQLite.SQLiteConnection): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.String, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Data.SQLite.SQLiteCommand SelectCommand 'get set' : 
    System.Data.SQLite.SQLiteCommand InsertCommand 'get set' : 
    System.Data.SQLite.SQLiteCommand UpdateCommand 'get set' : 
    System.Data.SQLite.SQLiteCommand DeleteCommand 'get set' : 
  Events:
    System.EventHandler`1[System.Data.Common.RowUpdatingEventArgs] RowUpdating: 
    System.EventHandler`1[System.Data.Common.RowUpdatedEventArgs] RowUpdated: 
  Methods:
    add_RowUpdating(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    remove_RowUpdating(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    FindBuilder(MulticastDelegate): PrivateScope, Assembly, Static, HideBySig
    add_RowUpdated(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    remove_RowUpdated(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    get_SelectCommand(): PrivateScope, Public, HideBySig, SpecialName
    set_SelectCommand(SQLiteCommand): PrivateScope, Public, HideBySig, SpecialName
    get_InsertCommand(): PrivateScope, Public, HideBySig, SpecialName
    set_InsertCommand(SQLiteCommand): PrivateScope, Public, HideBySig, SpecialName
    get_UpdateCommand(): PrivateScope, Public, HideBySig, SpecialName
    set_UpdateCommand(SQLiteCommand): PrivateScope, Public, HideBySig, SpecialName
    get_DeleteCommand(): PrivateScope, Public, HideBySig, SpecialName
    set_DeleteCommand(SQLiteCommand): PrivateScope, Public, HideBySig, SpecialName
Class System.Data.SQLite.SQLiteDataReader: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Data.Common.DbDataReader
    Void .ctor(System.Data.SQLite.SQLiteCommand, System.Data.CommandBehavior): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    Boolean _disposeCommand : Assembly
    Boolean _throwOnDisposed : Assembly
    Int32 _version : Assembly
  Properties:
    Int32 Depth 'get ' : 
    Int32 FieldCount 'get ' : 
    Int32 StepCount 'get ' : 
    Int32 VisibleFieldCount 'get ' : 
    Boolean HasRows 'get ' : 
    Boolean IsClosed 'get ' : 
    Int32 RecordsAffected 'get ' : 
    System.Object Item [System.String] 'get ' : 
    System.Object Item [Int32] 'get ' : 
  Methods:
    Cancel(): PrivateScope, Assembly, HideBySig
    Close(): PrivateScope, Public, Virtual, HideBySig
    GetEnumerator(): PrivateScope, Public, Virtual, HideBySig
    get_Depth(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_FieldCount(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    RefreshFlags(): PrivateScope, Public, HideBySig
    get_StepCount(): PrivateScope, Public, HideBySig, SpecialName
    get_VisibleFieldCount(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    GetRowId(Int32): PrivateScope, Assembly, HideBySig
    GetBlob(Int32, Boolean): PrivateScope, Public, HideBySig
    GetBoolean(Int32): PrivateScope, Public, Virtual, HideBySig
    GetByte(Int32): PrivateScope, Public, Virtual, HideBySig
    GetBytes(Int32, Int64, Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    GetChar(Int32): PrivateScope, Public, Virtual, HideBySig
    GetChars(Int32, Int64, Char[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    GetDataTypeName(Int32): PrivateScope, Public, Virtual, HideBySig
    GetDateTime(Int32): PrivateScope, Public, Virtual, HideBySig
    GetDecimal(Int32): PrivateScope, Public, Virtual, HideBySig
    GetDouble(Int32): PrivateScope, Public, Virtual, HideBySig
    GetFieldAffinity(Int32): PrivateScope, Public, HideBySig
    GetFieldType(Int32): PrivateScope, Public, Virtual, HideBySig
    GetFloat(Int32): PrivateScope, Public, Virtual, HideBySig
    GetGuid(Int32): PrivateScope, Public, Virtual, HideBySig
    GetInt16(Int32): PrivateScope, Public, Virtual, HideBySig
    GetInt32(Int32): PrivateScope, Public, Virtual, HideBySig
    GetInt64(Int32): PrivateScope, Public, Virtual, HideBySig
    GetName(Int32): PrivateScope, Public, Virtual, HideBySig
    GetDatabaseName(Int32): PrivateScope, Public, HideBySig
    GetTableName(Int32): PrivateScope, Public, HideBySig
    GetOriginalName(Int32): PrivateScope, Public, HideBySig
    GetOrdinal(String): PrivateScope, Public, Virtual, HideBySig
    GetSchemaTable(): PrivateScope, Public, Virtual, HideBySig
    GetSchemaTable(Boolean, Boolean): PrivateScope, Assembly, HideBySig
    GetString(Int32): PrivateScope, Public, Virtual, HideBySig
    GetValue(Int32): PrivateScope, Public, Virtual, HideBySig
    GetValues(Object[]): PrivateScope, Public, Virtual, HideBySig
    GetValues(): PrivateScope, Public, HideBySig
    get_HasRows(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_IsClosed(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    IsDBNull(Int32): PrivateScope, Public, Virtual, HideBySig
    NextResult(): PrivateScope, Public, Virtual, HideBySig
    GetConnection(SQLiteDataReader): PrivateScope, Assembly, Static, HideBySig
    Read(): PrivateScope, Public, Virtual, HideBySig
    PrivateRead(Boolean): PrivateScope, Assembly, HideBySig
    get_RecordsAffected(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Item(String): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Item(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class System.Data.SQLite.SQLiteDefineConstants: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Fields:
    System.Collections.Generic.IList`1[System.String] OptionList : Public, Static, InitOnly
Class System.Data.SQLite.SQLiteException: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, BeforeFieldInit
  :System.Data.Common.DbException
    Void .ctor(System.Data.SQLite.SQLiteErrorCode, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Data.SQLite.SQLiteErrorCode ResultCode 'get ' : 
    Int32 ErrorCode 'get ' : 
  Methods:
    GetObjectData(SerializationInfo, StreamingContext): PrivateScope, Public, Virtual, HideBySig, HasSecurity
    get_ResultCode(): PrivateScope, Public, HideBySig, SpecialName
    get_ErrorCode(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
Struct System.Data.SQLite.SQLiteErrorCode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Data.SQLite.SQLiteErrorCode Unknown = -1 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteErrorCode Ok = 0 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteErrorCode Error = 1 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteErrorCode Internal = 2 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteErrorCode Perm = 3 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteErrorCode Abort = 4 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteErrorCode Busy = 5 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteErrorCode Locked = 6 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteErrorCode NoMem = 7 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteErrorCode ReadOnly = 8 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteErrorCode Interrupt = 9 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteErrorCode IoErr = 10 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteErrorCode Corrupt = 11 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteErrorCode NotFound = 12 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteErrorCode Full = 13 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteErrorCode CantOpen = 14 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteErrorCode Protocol = 15 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteErrorCode Empty = 16 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteErrorCode Schema = 17 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteErrorCode TooBig = 18 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteErrorCode Constraint = 19 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteErrorCode Mismatch = 20 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteErrorCode Misuse = 21 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteErrorCode NoLfs = 22 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteErrorCode Auth = 23 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteErrorCode Format = 24 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteErrorCode Range = 25 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteErrorCode NotADb = 26 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteErrorCode Notice = 27 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteErrorCode Warning = 28 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteErrorCode Row = 100 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteErrorCode Done = 101 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteErrorCode NonExtendedMask = 255 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteErrorCode Error_Missing_CollSeq = 257 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteErrorCode Error_Retry = 513 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteErrorCode Error_Snapshot = 769 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteErrorCode IoErr_Read = 266 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteErrorCode IoErr_Short_Read = 522 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteErrorCode IoErr_Write = 778 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteErrorCode IoErr_Fsync = 1034 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteErrorCode IoErr_Dir_Fsync = 1290 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteErrorCode IoErr_Truncate = 1546 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteErrorCode IoErr_Fstat = 1802 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteErrorCode IoErr_Unlock = 2058 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteErrorCode IoErr_RdLock = 2314 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteErrorCode IoErr_Delete = 2570 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteErrorCode IoErr_Blocked = 2826 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteErrorCode IoErr_NoMem = 3082 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteErrorCode IoErr_Access = 3338 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteErrorCode IoErr_CheckReservedLock = 3594 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteErrorCode IoErr_Lock = 3850 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteErrorCode IoErr_Close = 4106 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteErrorCode IoErr_Dir_Close = 4362 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteErrorCode IoErr_ShmOpen = 4618 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteErrorCode IoErr_ShmSize = 4874 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteErrorCode IoErr_ShmLock = 5130 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteErrorCode IoErr_ShmMap = 5386 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteErrorCode IoErr_Seek = 5642 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteErrorCode IoErr_Delete_NoEnt = 5898 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteErrorCode IoErr_Mmap = 6154 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteErrorCode IoErr_GetTempPath = 6410 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteErrorCode IoErr_ConvPath = 6666 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteErrorCode IoErr_VNode = 6922 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteErrorCode IoErr_Auth = 7178 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteErrorCode IoErr_Begin_Atomic = 7434 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteErrorCode IoErr_Commit_Atomic = 7690 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteErrorCode IoErr_Rollback_Atomic = 7946 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteErrorCode IoErr_Data = 8202 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteErrorCode IoErr_CorruptFs = 8458 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteErrorCode Locked_SharedCache = 262 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteErrorCode Locked_Vtab = 518 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteErrorCode Busy_Recovery = 261 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteErrorCode Busy_Snapshot = 517 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteErrorCode Busy_Timeout = 773 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteErrorCode CantOpen_NoTempDir = 270 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteErrorCode CantOpen_IsDir = 526 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteErrorCode CantOpen_FullPath = 782 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteErrorCode CantOpen_ConvPath = 1038 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteErrorCode CantOpen_DirtyWal = 1294 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteErrorCode CantOpen_SymLink = 1550 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteErrorCode Corrupt_Vtab = 267 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteErrorCode Corrupt_Sequence = 523 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteErrorCode Corrupt_Index = 779 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteErrorCode ReadOnly_Recovery = 264 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteErrorCode ReadOnly_CantLock = 520 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteErrorCode ReadOnly_Rollback = 776 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteErrorCode ReadOnly_DbMoved = 1032 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteErrorCode ReadOnly_CantInit = 1288 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteErrorCode ReadOnly_Directory = 1544 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteErrorCode Abort_Rollback = 516 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteErrorCode Constraint_Check = 275 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteErrorCode Constraint_CommitHook = 531 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteErrorCode Constraint_ForeignKey = 787 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteErrorCode Constraint_Function = 1043 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteErrorCode Constraint_NotNull = 1299 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteErrorCode Constraint_PrimaryKey = 1555 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteErrorCode Constraint_Trigger = 1811 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteErrorCode Constraint_Unique = 2067 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteErrorCode Constraint_Vtab = 2323 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteErrorCode Constraint_RowId = 2579 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteErrorCode Constraint_Pinned = 2835 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteErrorCode Constraint_DataType = 3091 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteErrorCode Notice_Recover_Wal = 283 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteErrorCode Notice_Recover_Rollback = 539 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteErrorCode Notice_Rbu = 795 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteErrorCode Warning_AutoIndex = 284 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteErrorCode Auth_User = 279 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteErrorCode Ok_Load_Permanently = 256 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteErrorCode Ok_SymLink = 512 : Public, Static, Literal, HasDefault
Class System.Data.SQLite.SQLiteFactory: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Data.Common.DbProviderFactory
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
    System.IServiceProvider
  Fields:
    System.Data.SQLite.SQLiteFactory Instance : Public, Static, InitOnly
  Events:
    System.Data.SQLite.SQLiteLogEventHandler Log: 
  Methods:
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    add_Log(SQLiteLogEventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_Log(SQLiteLogEventHandler): PrivateScope, Public, HideBySig, SpecialName
    CreateCommand(): PrivateScope, Public, Virtual, HideBySig
    CreateCommandBuilder(): PrivateScope, Public, Virtual, HideBySig
    CreateConnection(): PrivateScope, Public, Virtual, HideBySig
    CreateConnectionStringBuilder(): PrivateScope, Public, Virtual, HideBySig
    CreateDataAdapter(): PrivateScope, Public, Virtual, HideBySig
    CreateParameter(): PrivateScope, Public, Virtual, HideBySig
    PreInitialize(): PrivateScope, Assembly, Static, HideBySig
Struct System.Data.SQLite.SQLiteFunctionFlags: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Data.SQLite.SQLiteFunctionFlags NONE = 0 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteFunctionFlags SQLITE_UTF8 = 1 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteFunctionFlags SQLITE_UTF16LE = 2 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteFunctionFlags SQLITE_UTF16BE = 3 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteFunctionFlags SQLITE_UTF16 = 4 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteFunctionFlags SQLITE_ANY = 5 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteFunctionFlags SQLITE_UTF16_ALIGNED = 8 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteFunctionFlags ENCODING_MASK = 15 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteFunctionFlags SQLITE_DETERMINISTIC = 2048 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteFunctionFlags SQLITE_DIRECTONLY = 524288 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteFunctionFlags SQLITE_SUBTYPE = 1048576 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteFunctionFlags SQLITE_INNOCUOUS = 2097152 : Public, Static, Literal, HasDefault
Class System.Data.SQLite.SQLiteFunction: AutoLayout, AnsiClass, Class, Public, Abstract
  Interfaces:
    System.IDisposable
  Fields:
    System.Data.SQLite.SQLiteBase _base : Assembly
    IntPtr _context : Assembly
  Properties:
    System.Data.SQLite.SQLiteConvert SQLiteConvert 'get ' : 
  Methods:
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_SQLiteConvert(): PrivateScope, Public, HideBySig, SpecialName
    Invoke(Object[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Step(Object[], Int32, Object&): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Final(Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Value(Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Inverse(Object[], Int32, Object&): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Compare(String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetParameterSubType(Int32): PrivateScope, Public, HideBySig
    GetParameterNumericType(Int32): PrivateScope, Public, HideBySig
    GetParameterNoChange(Int32): PrivateScope, Public, HideBySig
    GetParameterFromBind(Int32): PrivateScope, Public, HideBySig
    SetReturnSubType(UInt32): PrivateScope, Public, HideBySig
    ConvertParams(Int32, IntPtr, IntPtr[]&(Out)): PrivateScope, Assembly, HideBySig
    ScalarCallback(IntPtr, Int32, IntPtr): PrivateScope, Assembly, HideBySig
    CompareCallback(IntPtr, Int32, IntPtr, Int32, IntPtr): PrivateScope, Assembly, HideBySig
    CompareCallback16(IntPtr, Int32, IntPtr, Int32, IntPtr): PrivateScope, Assembly, HideBySig
    StepCallback(IntPtr, Int32, IntPtr): PrivateScope, Assembly, HideBySig
    FinalCallback(IntPtr): PrivateScope, Assembly, HideBySig
    ValueCallback(IntPtr): PrivateScope, Assembly, HideBySig
    InverseCallback(IntPtr, Int32, IntPtr): PrivateScope, Assembly, HideBySig
    RegisterFunction(Type): PrivateScope, Public, Static, HideBySig
    RegisterFunction(String, Int32, FunctionType, Type, Delegate, Delegate): PrivateScope, Public, Static, HideBySig
    RegisterFunction(String, Int32, FunctionType, SQLiteFunctionFlags, Type, Delegate, Delegate, Delegate, Delegate): PrivateScope, Public, Static, HideBySig
    BindFunctions(SQLiteBase, SQLiteConnectionFlags): PrivateScope, Assembly, Static, HideBySig
    UnbindAllFunctions(SQLiteBase, SQLiteConnectionFlags, Boolean): PrivateScope, Assembly, Static, HideBySig
    BindFunction(SQLiteBase, SQLiteFunctionAttribute, SQLiteFunction, SQLiteConnectionFlags): PrivateScope, Assembly, Static, HideBySig
    UnbindFunction(SQLiteBase, SQLiteFunctionAttribute, SQLiteFunction, SQLiteConnectionFlags): PrivateScope, Assembly, Static, HideBySig
Class System.Data.SQLite.SQLiteInvokeDelegate: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(String, Object[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(String, Object[], AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class System.Data.SQLite.SQLiteStepDelegate: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(String, Object[], Int32, Object&): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(String, Object[], Int32, Object&, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(Object&, IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class System.Data.SQLite.SQLiteFinalDelegate: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(String, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(String, Object, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class System.Data.SQLite.SQLiteCompareDelegate: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(String, String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(String, String, String, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class System.Data.SQLite.SQLiteDelegateFunction: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Data.SQLite.SQLiteFunction
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Delegate, System.Delegate): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Delegate, System.Delegate, System.Delegate, System.Delegate): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Delegate Callback1 'get set' : 
    System.Delegate Callback2 'get set' : 
    System.Delegate Callback3 'get set' : 
    System.Delegate Callback4 'get set' : 
  Methods:
    get_Callback1(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Callback1(Delegate): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Callback2(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Callback2(Delegate): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Callback3(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Callback3(Delegate): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Callback4(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Callback4(Delegate): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Invoke(Object[]): PrivateScope, Public, Virtual, HideBySig
    Step(Object[], Int32, Object&): PrivateScope, Public, Virtual, HideBySig
    Final(Object): PrivateScope, Public, Virtual, HideBySig
    Value(Object): PrivateScope, Public, Virtual, HideBySig
    Inverse(Object[], Int32, Object&): PrivateScope, Public, Virtual, HideBySig
    Compare(String, String): PrivateScope, Public, Virtual, HideBySig
Class System.Data.SQLite.SQLiteFunctionEx: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Data.SQLite.SQLiteFunction
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Struct System.Data.SQLite.FunctionType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Data.SQLite.FunctionType Scalar = 0 : Public, Static, Literal, HasDefault
    System.Data.SQLite.FunctionType Aggregate = 1 : Public, Static, Literal, HasDefault
    System.Data.SQLite.FunctionType Collation = 2 : Public, Static, Literal, HasDefault
    System.Data.SQLite.FunctionType Window = 3 : Public, Static, Literal, HasDefault
Class System.Data.SQLite.SQLiteCallback: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(IntPtr, Int32, IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(IntPtr, Int32, IntPtr, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class System.Data.SQLite.SQLiteFinalCallback: AutoLayout, AnsiClass, Class, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(IntPtr, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class System.Data.SQLite.SQLiteCollation: AutoLayout, AnsiClass, Class, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(IntPtr, Int32, IntPtr, Int32, IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(IntPtr, Int32, IntPtr, Int32, IntPtr, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Struct System.Data.SQLite.CollationTypeEnum: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Data.SQLite.CollationTypeEnum Binary = 1 : Public, Static, Literal, HasDefault
    System.Data.SQLite.CollationTypeEnum NoCase = 2 : Public, Static, Literal, HasDefault
    System.Data.SQLite.CollationTypeEnum Reverse = 3 : Public, Static, Literal, HasDefault
    System.Data.SQLite.CollationTypeEnum Custom = 0 : Public, Static, Literal, HasDefault
Struct System.Data.SQLite.CollationEncodingEnum: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Data.SQLite.CollationEncodingEnum UTF8 = 1 : Public, Static, Literal, HasDefault
    System.Data.SQLite.CollationEncodingEnum UTF16LE = 2 : Public, Static, Literal, HasDefault
    System.Data.SQLite.CollationEncodingEnum UTF16BE = 3 : Public, Static, Literal, HasDefault
Struct System.Data.SQLite.CollationSequence: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    System.String Name : Public
    System.Data.SQLite.CollationTypeEnum Type : Public
    System.Data.SQLite.CollationEncodingEnum Encoding : Public
    System.Data.SQLite.SQLiteFunction _func : Assembly
  Methods:
    Compare(String, String): PrivateScope, Public, HideBySig
    Compare(Char[], Char[]): PrivateScope, Public, HideBySig
Class System.Data.SQLite.SQLiteFunctionAttribute: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, Int32, System.Data.SQLite.FunctionType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, Int32, System.Data.SQLite.FunctionType, System.Data.SQLite.SQLiteFunctionFlags): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Name 'get set' : 
    Int32 Arguments 'get set' : 
    System.Data.SQLite.FunctionType FuncType 'get set' : 
    System.Data.SQLite.SQLiteFunctionFlags FuncFlags 'get set' : 
    System.Type InstanceType 'get set' : 
    System.Delegate Callback1 'get set' : 
    System.Delegate Callback2 'get set' : 
    System.Delegate Callback3 'get set' : 
    System.Delegate Callback4 'get set' : 
  Methods:
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    set_Name(String): PrivateScope, Public, HideBySig, SpecialName
    get_Arguments(): PrivateScope, Public, HideBySig, SpecialName
    set_Arguments(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_FuncType(): PrivateScope, Public, HideBySig, SpecialName
    set_FuncType(FunctionType): PrivateScope, Public, HideBySig, SpecialName
    get_FuncFlags(): PrivateScope, Public, HideBySig, SpecialName
    set_FuncFlags(SQLiteFunctionFlags): PrivateScope, Public, HideBySig, SpecialName
    get_InstanceType(): PrivateScope, Assembly, HideBySig, SpecialName
    set_InstanceType(Type): PrivateScope, Assembly, HideBySig, SpecialName
    get_Callback1(): PrivateScope, Assembly, HideBySig, SpecialName
    set_Callback1(Delegate): PrivateScope, Assembly, HideBySig, SpecialName
    get_Callback2(): PrivateScope, Assembly, HideBySig, SpecialName
    set_Callback2(Delegate): PrivateScope, Assembly, HideBySig, SpecialName
    get_Callback3(): PrivateScope, Assembly, HideBySig, SpecialName
    set_Callback3(Delegate): PrivateScope, Assembly, HideBySig, SpecialName
    get_Callback4(): PrivateScope, Assembly, HideBySig, SpecialName
    set_Callback4(Delegate): PrivateScope, Assembly, HideBySig, SpecialName
Class System.Data.SQLite.SQLiteKeyReader: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(System.Data.SQLite.SQLiteConnection, System.Data.SQLite.SQLiteDataReader, System.Data.SQLite.SQLiteStatement): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    Int32 Count 'get ' : 
  Methods:
    GetRowIdIndex(String, String): PrivateScope, Assembly, HideBySig
    GetRowId(String, String): PrivateScope, Assembly, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Count(): PrivateScope, Assembly, HideBySig, SpecialName
    Reset(): PrivateScope, Assembly, HideBySig
    GetDataTypeName(Int32): PrivateScope, Assembly, HideBySig
    GetFieldAffinity(Int32): PrivateScope, Assembly, HideBySig
    GetFieldType(Int32): PrivateScope, Assembly, HideBySig
    GetDatabaseName(Int32): PrivateScope, Assembly, HideBySig
    GetTableName(Int32): PrivateScope, Assembly, HideBySig
    GetName(Int32): PrivateScope, Assembly, HideBySig
    GetOrdinal(String): PrivateScope, Assembly, HideBySig
    GetBlob(Int32, Boolean): PrivateScope, Assembly, HideBySig
    GetBoolean(Int32): PrivateScope, Assembly, HideBySig
    GetByte(Int32): PrivateScope, Assembly, HideBySig
    GetBytes(Int32, Int64, Byte[], Int32, Int32): PrivateScope, Assembly, HideBySig
    GetChar(Int32): PrivateScope, Assembly, HideBySig
    GetChars(Int32, Int64, Char[], Int32, Int32): PrivateScope, Assembly, HideBySig
    GetDateTime(Int32): PrivateScope, Assembly, HideBySig
    GetDecimal(Int32): PrivateScope, Assembly, HideBySig
    GetDouble(Int32): PrivateScope, Assembly, HideBySig
    GetFloat(Int32): PrivateScope, Assembly, HideBySig
    GetGuid(Int32): PrivateScope, Assembly, HideBySig
    GetInt16(Int32): PrivateScope, Assembly, HideBySig
    GetInt32(Int32): PrivateScope, Assembly, HideBySig
    GetInt64(Int32): PrivateScope, Assembly, HideBySig
    GetString(Int32): PrivateScope, Assembly, HideBySig
    GetValue(Int32): PrivateScope, Assembly, HideBySig
    IsDBNull(Int32): PrivateScope, Assembly, HideBySig
    AppendSchemaTable(DataTable): PrivateScope, Assembly, HideBySig
Class System.Data.SQLite.LogEventArgs: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.EventArgs
    Void .ctor(IntPtr, System.Object, System.String, System.Object): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.Object ErrorCode : Public, InitOnly
    System.String Message : Public, InitOnly
    System.Object Data : Public, InitOnly
Class System.Data.SQLite.SQLiteLogEventHandler: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(Object, LogEventArgs): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(Object, LogEventArgs, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class System.Data.SQLite.SQLiteLog: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Properties:
    Boolean Enabled 'get set' : 
    Boolean InternalEnabled 'get set' : 
  Events:
    System.Data.SQLite.SQLiteLogEventHandler _handlers: 
    System.Data.SQLite.SQLiteLogEventHandler Log: 
  Methods:
    Initialize(): PrivateScope, Public, Static, HideBySig
    Initialize(String): PrivateScope, Assembly, Static, HideBySig
    Uninitialize(): PrivateScope, Public, Static, HideBySig
    Uninitialize(String, Boolean): PrivateScope, Assembly, Static, HideBySig
    add_Log(SQLiteLogEventHandler): PrivateScope, Public, Static, HideBySig, SpecialName
    remove_Log(SQLiteLogEventHandler): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Enabled(): PrivateScope, Public, Static, HideBySig, SpecialName
    set_Enabled(Boolean): PrivateScope, Public, Static, HideBySig, SpecialName
    get_InternalEnabled(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    set_InternalEnabled(Boolean): PrivateScope, Assembly, Static, HideBySig, SpecialName
    LogMessage(String): PrivateScope, Public, Static, HideBySig
    LogMessage(SQLiteErrorCode, String): PrivateScope, Public, Static, HideBySig
    LogMessage(Int32, String): PrivateScope, Public, Static, HideBySig
    AddDefaultHandler(): PrivateScope, Public, Static, HideBySig
    RemoveDefaultHandler(): PrivateScope, Public, Static, HideBySig
Class System.Data.SQLite.SQLiteMetaDataCollectionNames: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Fields:
    System.String Catalogs : Public, Static, InitOnly
    System.String Columns : Public, Static, InitOnly
    System.String Indexes : Public, Static, InitOnly
    System.String IndexColumns : Public, Static, InitOnly
    System.String Tables : Public, Static, InitOnly
    System.String Views : Public, Static, InitOnly
    System.String ViewColumns : Public, Static, InitOnly
    System.String ForeignKeys : Public, Static, InitOnly
    System.String Triggers : Public, Static, InitOnly
Class System.Data.SQLite.SQLiteParameter: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Data.Common.DbParameter
    Void .ctor(System.Data.IDbCommand): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Object): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Data.DbType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Data.DbType, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Data.DbType, System.String, System.Data.DataRowVersion): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Data.DbType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Data.DbType, System.Object): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Data.DbType, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Data.DbType, System.String, System.Data.DataRowVersion): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Data.DbType, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Data.DbType, Int32, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Data.DbType, Int32, System.String, System.Data.DataRowVersion): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Data.DbType, Int32, System.Data.ParameterDirection, Boolean, Byte, Byte, System.String, System.Data.DataRowVersion, System.Object): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Data.DbType, Int32, System.Data.ParameterDirection, Byte, Byte, System.String, System.Data.DataRowVersion, Boolean, System.Object): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Data.DbType, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Data.DbType, Int32, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Data.DbType, Int32, System.String, System.Data.DataRowVersion): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.ICloneable
  Fields:
    System.Data.DbType _dbType : Assembly
  Properties:
    System.Data.IDbCommand Command 'get set' : 
    Boolean IsNullable 'get set' : 
    System.Data.DbType DbType 'get set' : 
    System.Data.ParameterDirection Direction 'get set' : 
    System.String ParameterName 'get set' : 
    Int32 Size 'get set' : 
    System.String SourceColumn 'get set' : 
    Boolean SourceColumnNullMapping 'get set' : 
    System.Data.DataRowVersion SourceVersion 'get set' : 
    System.Object Value 'get set' : 
    System.String TypeName 'get set' : 
  Methods:
    get_Command(): PrivateScope, Public, HideBySig, SpecialName
    set_Command(IDbCommand): PrivateScope, Public, HideBySig, SpecialName
    get_IsNullable(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_IsNullable(Boolean): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_DbType(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_DbType(DbType): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Direction(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Direction(ParameterDirection): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_ParameterName(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_ParameterName(String): PrivateScope, Public, Virtual, HideBySig, SpecialName
    ResetDbType(): PrivateScope, Public, Virtual, HideBySig
    get_Size(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Size(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_SourceColumn(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_SourceColumn(String): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_SourceColumnNullMapping(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_SourceColumnNullMapping(Boolean): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_SourceVersion(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_SourceVersion(DataRowVersion): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Value(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Value(Object): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_TypeName(): PrivateScope, Public, HideBySig, SpecialName
    set_TypeName(String): PrivateScope, Public, HideBySig, SpecialName
    Clone(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class System.Data.SQLite.SQLiteParameterCollection: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Data.Common.DbParameterCollection
    Void .ctor(System.Data.SQLite.SQLiteCommand): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsSynchronized 'get ' : 
    Boolean IsFixedSize 'get ' : 
    Boolean IsReadOnly 'get ' : 
    System.Object SyncRoot 'get ' : 
    Int32 Count 'get ' : 
    System.Data.SQLite.SQLiteParameter Item [System.String] 'get set' : 
    System.Data.SQLite.SQLiteParameter Item [Int32] 'get set' : 
  Methods:
    get_IsSynchronized(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_IsFixedSize(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_IsReadOnly(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_SyncRoot(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    GetEnumerator(): PrivateScope, Public, Virtual, HideBySig
    Add(String, DbType, Int32, String): PrivateScope, Public, HideBySig
    Add(String, DbType, Int32): PrivateScope, Public, HideBySig
    Add(String, DbType): PrivateScope, Public, HideBySig
    Add(SQLiteParameter): PrivateScope, Public, HideBySig
    Add(Object): PrivateScope, Public, Virtual, HideBySig
    AddWithValue(String, Object): PrivateScope, Public, HideBySig
    AddRange(SQLiteParameter[]): PrivateScope, Public, HideBySig
    AddRange(Array): PrivateScope, Public, Virtual, HideBySig
    Clear(): PrivateScope, Public, Virtual, HideBySig
    Contains(String): PrivateScope, Public, Virtual, HideBySig
    Contains(Object): PrivateScope, Public, Virtual, HideBySig
    CopyTo(Array, Int32): PrivateScope, Public, Virtual, HideBySig
    get_Count(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Item(String): PrivateScope, Public, HideBySig, SpecialName
    set_Item(String, SQLiteParameter): PrivateScope, Public, HideBySig, SpecialName
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
    set_Item(Int32, SQLiteParameter): PrivateScope, Public, HideBySig, SpecialName
    IndexOf(String): PrivateScope, Public, Virtual, HideBySig
    IndexOf(Object): PrivateScope, Public, Virtual, HideBySig
    Insert(Int32, Object): PrivateScope, Public, Virtual, HideBySig
    Remove(Object): PrivateScope, Public, Virtual, HideBySig
    RemoveAt(String): PrivateScope, Public, Virtual, HideBySig
    RemoveAt(Int32): PrivateScope, Public, Virtual, HideBySig
    Unbind(): PrivateScope, Assembly, HideBySig
    MapParameters(SQLiteStatement): PrivateScope, Assembly, HideBySig
Class System.Data.SQLite.SQLiteStatement: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(System.Data.SQLite.SQLiteBase, System.Data.SQLite.SQLiteConnectionFlags, System.Data.SQLite.SQLiteStatementHandle, System.String, System.Data.SQLite.SQLiteStatement): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Fields:
    System.Data.SQLite.SQLiteBase _sql : Assembly
    System.String _sqlStatement : Assembly
    System.Data.SQLite.SQLiteStatementHandle _sqlite_stmt : Assembly
    Int32 _unnamedParameters : Assembly
    System.String[] _paramNames : Assembly
    System.Data.SQLite.SQLiteParameter[] _paramValues : Assembly
    System.Data.SQLite.SQLiteCommand _command : Assembly
    Int32 _prepareSchemaRetries : Assembly
    Int32 _prepareLockRetries : Assembly
    Int32 _stepSchemaRetries : Assembly
    Int32 _stepLockRetries : Assembly
  Properties:
    System.String[] TypeDefinitions 'get ' : 
  Methods:
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    TryGetChanges(Int32&, Boolean&): PrivateScope, Assembly, HideBySig
    MapParameter(String, SQLiteParameter): PrivateScope, Assembly, HideBySig
    BindParameters(): PrivateScope, Assembly, HideBySig
    get_TypeDefinitions(): PrivateScope, Assembly, HideBySig, SpecialName
    SetTypes(String): PrivateScope, Assembly, HideBySig
Class System.Data.SQLite.SQLiteTransaction: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Data.SQLite.SQLiteTransactionBase
    Void .ctor(System.Data.SQLite.SQLiteConnection, Boolean): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Methods:
    Commit(): PrivateScope, Public, Virtual, HideBySig
Class System.Data.SQLite.SQLiteTransaction2: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Data.SQLite.SQLiteTransaction
    Void .ctor(System.Data.SQLite.SQLiteConnection, Boolean): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Methods:
    Commit(): PrivateScope, Public, Virtual, HideBySig
Class System.Data.SQLite.SQLiteTransactionBase: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :System.Data.Common.DbTransaction
    Void .ctor(System.Data.SQLite.SQLiteConnection, Boolean): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.Data.SQLite.SQLiteConnection _cnn : Assembly
    Int32 _version : Assembly
  Properties:
    System.Data.IsolationLevel IsolationLevel 'get ' : 
    System.Data.SQLite.SQLiteConnection Connection 'get ' : 
  Methods:
    get_IsolationLevel(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Connection(): PrivateScope, Public, HideBySig, SpecialName
    Rollback(): PrivateScope, Public, Virtual, HideBySig
    IsValid(Boolean): PrivateScope, Assembly, HideBySig
Class System.Data.SQLite.HelperMethods: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    IsDotNetCore(): PrivateScope, Public, Static, HideBySig
    ResetBreakIntoDebugger(): PrivateScope, Assembly, Static, HideBySig
    MaybeBreakIntoDebugger(): PrivateScope, Assembly, Static, HideBySig
    GetThreadId(): PrivateScope, Assembly, Static, HideBySig
    HasFlags(SQLiteConnectionFlags, SQLiteConnectionFlags): PrivateScope, Assembly, Static, HideBySig
    LogPrepare(SQLiteConnectionFlags): PrivateScope, Assembly, Static, HideBySig
    LogPreBind(SQLiteConnectionFlags): PrivateScope, Assembly, Static, HideBySig
    LogBind(SQLiteConnectionFlags): PrivateScope, Assembly, Static, HideBySig
    LogCallbackExceptions(SQLiteConnectionFlags): PrivateScope, Assembly, Static, HideBySig
    LogBackup(SQLiteConnectionFlags): PrivateScope, Assembly, Static, HideBySig
    NoLogModule(SQLiteConnectionFlags): PrivateScope, Assembly, Static, HideBySig
    LogModuleError(SQLiteConnectionFlags): PrivateScope, Assembly, Static, HideBySig
    LogModuleException(SQLiteConnectionFlags): PrivateScope, Assembly, Static, HideBySig
    LogRetry(SQLiteConnectionFlags): PrivateScope, Assembly, Static, HideBySig
    IsWindows(): PrivateScope, Assembly, Static, HideBySig
    StringFormat(IFormatProvider, String, Object[]): PrivateScope, Assembly, Static, HideBySig
    ToDisplayString(Object): PrivateScope, Public, Static, HideBySig
    ToDisplayString(Array): PrivateScope, Public, Static, HideBySig
Class System.Data.SQLite.NativeLibraryHelper: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    LoadLibrary(String): PrivateScope, Public, Static, HideBySig
    GetMachine(): PrivateScope, Public, Static, HideBySig
Class System.Data.SQLite.UnsafeNativeMethodsPosix: AutoLayout, AnsiClass, Class, Abstract, Sealed, HasSecurity, BeforeFieldInit
  Fields:
    Int32 RTLD_LAZY = 1 : Assembly, Static, Literal, HasDefault
    Int32 RTLD_NOW = 2 : Assembly, Static, Literal, HasDefault
    Int32 RTLD_GLOBAL = 256 : Assembly, Static, Literal, HasDefault
    Int32 RTLD_LOCAL = 0 : Assembly, Static, Literal, HasDefault
    Int32 RTLD_DEFAULT = 258 : Assembly, Static, Literal, HasDefault
  Methods:
    dlopen(String, Int32): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    dlclose(IntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    GetOsVersionInfo(utsname&): PrivateScope, Assembly, Static, HideBySig
Class System.Data.SQLite.UnsafeNativeMethodsWin32: AutoLayout, AnsiClass, Class, Abstract, Sealed, HasSecurity, BeforeFieldInit
  Methods:
    LoadLibrary(String): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    GetSystemInfo(SYSTEM_INFO&(Out)): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
Class System.Data.SQLite.UnsafeNativeMethods: AutoLayout, AnsiClass, Class, Abstract, Sealed, HasSecurity
  Fields:
    System.String ExceptionMessageFormat = Caught exception in "{0}" method: {1} : Public, Static, Literal, HasDefault
    System.String SQLITE_DLL = System.Data.SQLite.dll : Assembly, Static, Literal, HasDefault
  Methods:
    sqlite3changeset_invert_strm(xSessionInput, IntPtr, xSessionOutput, IntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3changeset_start_strm(IntPtr&, xSessionInput, IntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3changeset_start_v2_strm(IntPtr&, xSessionInput, IntPtr, SQLiteChangeSetStartFlags): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3session_changeset_strm(IntPtr, xSessionOutput, IntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3session_patchset_strm(IntPtr, xSessionOutput, IntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3changegroup_add_strm(IntPtr, xSessionInput, IntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3changegroup_output_strm(IntPtr, xSessionOutput, IntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3session_delete(IntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3session_enable(IntPtr, Int32): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3session_indirect(IntPtr, Int32): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3session_attach(IntPtr, Byte[]): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3session_table_filter(IntPtr, xSessionFilter, IntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3session_changeset(IntPtr, Int32&, IntPtr&): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3session_diff(IntPtr, Byte[], Byte[], IntPtr&): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3session_patchset(IntPtr, Int32&, IntPtr&): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3session_isempty(IntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3changeset_start(IntPtr&, Int32, IntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3changeset_start_v2(IntPtr&, Int32, IntPtr, SQLiteChangeSetStartFlags): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3changeset_next(IntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3changeset_op(IntPtr, IntPtr&, Int32&, SQLiteAuthorizerActionCode&, Int32&): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3changeset_pk(IntPtr, IntPtr&, Int32&): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3changeset_old(IntPtr, Int32, IntPtr&): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3changeset_new(IntPtr, Int32, IntPtr&): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3changeset_conflict(IntPtr, Int32, IntPtr&): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3changeset_fk_conflicts(IntPtr, Int32&): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3changeset_finalize(IntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3changeset_invert(Int32, IntPtr, Int32&, IntPtr&): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3changeset_concat(Int32, IntPtr, Int32, IntPtr, Int32&, IntPtr&): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3changegroup_new(IntPtr&): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3changegroup_add(IntPtr, Int32, IntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3changegroup_output(IntPtr, Int32&, IntPtr&): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3changegroup_delete(IntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3changeset_apply(IntPtr, Int32, IntPtr, xSessionFilter, xSessionConflict, IntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3changeset_apply_strm(IntPtr, xSessionInput, IntPtr, xSessionFilter, xSessionConflict, IntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3changeset_concat_strm(xSessionInput, IntPtr, xSessionInput, IntPtr, xSessionOutput, IntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_db_filename_bytes(IntPtr, Byte[]): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_next_stmt(IntPtr, IntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_exec(IntPtr, Byte[], IntPtr, IntPtr, IntPtr&): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_release_memory(Int32): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_get_autocommit(IntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_extended_result_codes(IntPtr, Int32): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_errcode(IntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_extended_errcode(IntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_errstr(SQLiteErrorCode): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_log(SQLiteErrorCode, Byte[]): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_file_control(IntPtr, Byte[], Int32, IntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_backup_init(IntPtr, Byte[], IntPtr, Byte[]): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_backup_step(IntPtr, Int32): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_backup_remaining(IntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_backup_pagecount(IntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_blob_close(IntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_blob_bytes(IntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_blob_open(IntPtr, Byte[], Byte[], Byte[], Int64, Int32, IntPtr&): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_blob_read(IntPtr, Byte[](HasFieldMarshal), Int32, Int32): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_blob_reopen(IntPtr, Int64): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_blob_write(IntPtr, Byte[](HasFieldMarshal), Int32, Int32): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_declare_vtab(IntPtr, IntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_mprintf(IntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_txn_state(IntPtr, IntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_create_disposable_module(IntPtr, IntPtr, sqlite3_module&, IntPtr, xDestroyModule): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_dispose_module(IntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3session_memory_used(IntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3session_create(IntPtr, Byte[], IntPtr&): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_result_int64(IntPtr, Int64): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_result_null(IntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_result_text(IntPtr, Byte[], Int32, IntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_result_subtype(IntPtr, UInt32): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_aggregate_context(IntPtr, Int32): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_bind_text16(IntPtr, Int32, String, Int32, IntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_result_error16(IntPtr, String, Int32): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_result_text16(IntPtr, String, Int32, IntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_busy_handler(IntPtr, SQLiteBusyCallback, IntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_progress_handler(IntPtr, Int32, SQLiteProgressCallback, IntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_set_authorizer(IntPtr, SQLiteAuthorizerCallback, IntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_update_hook(IntPtr, SQLiteUpdateCallback, IntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_commit_hook(IntPtr, SQLiteCommitCallback, IntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_trace(IntPtr, SQLiteTraceCallback, IntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_trace_v2(IntPtr, SQLiteTraceFlags, SQLiteTraceCallback2, IntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_limit(IntPtr, SQLiteLimitOpsEnum, Int32): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_config_none(SQLiteConfigOpsEnum): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_config_int(SQLiteConfigOpsEnum, Int32): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_config_log(SQLiteConfigOpsEnum, SQLiteLogCallback, IntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_db_config_charptr(IntPtr, SQLiteConfigDbOpsEnum, IntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_db_config_int_refint(IntPtr, SQLiteConfigDbOpsEnum, Int32, Int32&): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_db_config_intptr_two_ints(IntPtr, SQLiteConfigDbOpsEnum, IntPtr, Int32, Int32): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_db_status(IntPtr, SQLiteStatusOpsEnum, Int32&, Int32&, Int32): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_rollback_hook(IntPtr, SQLiteRollbackCallback, IntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_db_handle(IntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_db_release_memory(IntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_db_filename(IntPtr, IntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_db_readonly(IntPtr, IntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_column_int64(IntPtr, Int32): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_column_blob(IntPtr, Int32): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_column_bytes(IntPtr, Int32): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_column_bytes16(IntPtr, Int32): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_column_type(IntPtr, Int32): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_create_collation(IntPtr, Byte[], SQLiteFunctionFlags, IntPtr, SQLiteCollation): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_aggregate_count(IntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_value_blob(IntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_value_bytes(IntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_value_bytes16(IntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_value_double(IntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_value_int(IntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_value_int64(IntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_value_type(IntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_value_subtype(IntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_value_numeric_type(IntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_value_nochange(IntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_vtab_nochange(IntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_value_frombind(IntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_result_blob(IntPtr, Byte[], Int32, IntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_result_double(IntPtr, Double): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_result_error(IntPtr, Byte[], Int32): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_result_error_code(IntPtr, SQLiteErrorCode): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_result_error_toobig(IntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_result_error_nomem(IntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_result_value(IntPtr, IntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_result_zeroblob(IntPtr, Int32): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_result_int(IntPtr, Int32): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_realloc(IntPtr, Int32): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_realloc64(IntPtr, UInt64): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_msize(IntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_free(IntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_interrupt(IntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_is_interrupted(IntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_last_insert_rowid(IntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_changes(IntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_memory_used(): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_memory_highwater(Int32): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_shutdown(): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_busy_timeout(IntPtr, Int32): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_clear_bindings(IntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_bind_blob(IntPtr, Int32, Byte[], Int32, IntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_bind_double(IntPtr, Int32, Double): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_bind_int(IntPtr, Int32, Int32): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_bind_uint(IntPtr, Int32, UInt32): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_bind_int64(IntPtr, Int32, Int64): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_bind_uint64(IntPtr, Int32, UInt64): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_bind_null(IntPtr, Int32): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_bind_text(IntPtr, Int32, Byte[], Int32, IntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_bind_parameter_count(IntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_bind_parameter_index(IntPtr, Byte[]): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_column_count(IntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_step(IntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_stmt_readonly(IntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_column_double(IntPtr, Int32): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_column_int(IntPtr, Int32): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_create_function_interop(IntPtr, Byte[], Int32, SQLiteFunctionFlags, IntPtr, SQLiteCallback, SQLiteCallback, SQLiteFinalCallback, Int32): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_create_window_function_interop(IntPtr, Byte[], Int32, SQLiteFunctionFlags, IntPtr, SQLiteCallback, SQLiteFinalCallback, SQLiteFinalCallback, SQLiteCallback, Int32): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_finalize_interop(IntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_backup_finish_interop(IntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_blob_close_interop(IntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_open_interop(Byte[], Byte[], SQLiteOpenFlagsEnum, Int32, IntPtr&): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_open16_interop(Byte[], Byte[], SQLiteOpenFlagsEnum, Int32, IntPtr&): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_reset_interop(IntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_changes_interop(IntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_context_collseq_interop(IntPtr, Int32&, Int32&, Int32&): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_context_collcompare_interop(IntPtr, Byte[], Int32, Byte[], Int32): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_cursor_rowid_interop(IntPtr, Int32, Int64&): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_index_column_info_interop(IntPtr, Byte[], Byte[], Byte[], Int32&, Int32&, IntPtr&, Int32&): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_table_cursor_interop(IntPtr, Int32, Int32): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_libversion(): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_libversion_number(): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_sourceid(): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_compileoption_used(IntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_compileoption_get(Int32): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_enable_shared_cache(Int32): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_enable_load_extension(IntPtr, Int32): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_load_extension(IntPtr, Byte[], Byte[], IntPtr&): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_overload_function(IntPtr, IntPtr, Int32): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_win32_set_directory(UInt32, String): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_win32_reset_heap(): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_win32_compact_heap(UInt32&): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_malloc(Int32): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_malloc64(UInt64): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    Initialize(): PrivateScope, Assembly, Static, HideBySig
    GetSettingValue(String, String): PrivateScope, Assembly, Static, HideBySig
    GetCachedAssemblyDirectory(): PrivateScope, Public, Static, HideBySig
    GetNativeModuleFileName(): PrivateScope, Assembly, Static, HideBySig
    sqlite3_bind_parameter_name_interop(IntPtr, Int32, Int32&): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_column_database_name_interop(IntPtr, Int32, Int32&): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_column_database_name16_interop(IntPtr, Int32, Int32&): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_column_decltype_interop(IntPtr, Int32, Int32&): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_column_decltype16_interop(IntPtr, Int32, Int32&): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_column_name_interop(IntPtr, Int32, Int32&): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_column_name16_interop(IntPtr, Int32, Int32&): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_column_origin_name_interop(IntPtr, Int32, Int32&): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_column_origin_name16_interop(IntPtr, Int32, Int32&): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_column_table_name_interop(IntPtr, Int32, Int32&): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_column_table_name16_interop(IntPtr, Int32, Int32&): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_column_text_interop(IntPtr, Int32, Int32&): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_column_text16_interop(IntPtr, Int32, Int32&): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_errmsg_interop(IntPtr, Int32&): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_prepare_interop(IntPtr, IntPtr, Int32, IntPtr&, IntPtr&, Int32&): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_table_column_metadata_interop(IntPtr, Byte[], Byte[], Byte[], IntPtr&, IntPtr&, Int32&, Int32&, Int32&, Int32&, Int32&): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_value_text_interop(IntPtr, Int32&): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_value_text16_interop(IntPtr, Int32&): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_malloc_size_interop(IntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    interop_libversion(): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    interop_sourceid(): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    interop_compileoption_used(IntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    interop_compileoption_get(Int32): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    sqlite3_close_interop(IntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
Class System.Data.SQLite.SQLiteConnectionHandle: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Runtime.InteropServices.CriticalHandle
    Void .ctor(IntPtr, Boolean): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean OwnHandle 'get ' : 
    Boolean IsInvalid 'get ' : 
  Methods:
    op_Implicit(SQLiteConnectionHandle): PrivateScope, Public, Static, HideBySig, SpecialName
    get_OwnHandle(): PrivateScope, Public, HideBySig, SpecialName
    get_IsInvalid(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class System.Data.SQLite.SQLiteStatementHandle: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Runtime.InteropServices.CriticalHandle
    Void .ctor(System.Data.SQLite.SQLiteConnectionHandle, IntPtr): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsInvalid 'get ' : 
  Methods:
    op_Implicit(SQLiteStatementHandle): PrivateScope, Public, Static, HideBySig, SpecialName
    get_IsInvalid(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class System.Data.SQLite.SQLiteBackupHandle: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Runtime.InteropServices.CriticalHandle
    Void .ctor(System.Data.SQLite.SQLiteConnectionHandle, IntPtr): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsInvalid 'get ' : 
  Methods:
    op_Implicit(SQLiteBackupHandle): PrivateScope, Public, Static, HideBySig, SpecialName
    get_IsInvalid(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class System.Data.SQLite.SQLiteBlobHandle: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Runtime.InteropServices.CriticalHandle
    Void .ctor(System.Data.SQLite.SQLiteConnectionHandle, IntPtr): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsInvalid 'get ' : 
  Methods:
    op_Implicit(SQLiteBlobHandle): PrivateScope, Public, Static, HideBySig, SpecialName
    get_IsInvalid(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class System.Data.SQLite.SR: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Resources.ResourceManager ResourceManager 'get ' : 
    System.Globalization.CultureInfo Culture 'get set' : 
    System.String DataTypes 'get ' : 
    System.String Keywords 'get ' : 
    System.String MetaDataCollections 'get ' : 
  Methods:
    get_ResourceManager(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_Culture(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    set_Culture(CultureInfo): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_DataTypes(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_Keywords(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_MetaDataCollections(): PrivateScope, Assembly, Static, HideBySig, SpecialName
Class System.Data.SQLite.SQLiteEnlistment: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(System.Data.SQLite.SQLiteConnection, System.Transactions.Transaction, System.Data.IsolationLevel, Boolean, Boolean): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
    System.Transactions.IEnlistmentNotification
  Fields:
    System.Data.SQLite.SQLiteTransaction _transaction : Assembly
    System.Transactions.Transaction _scope : Assembly
    Boolean _disposeConnection : Assembly
  Methods:
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Commit(Enlistment): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    InDoubt(Enlistment): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Prepare(PreparingEnlistment): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Rollback(Enlistment): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Interface System.Data.SQLite.ISQLiteNativeModule: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    xCreate(IntPtr, IntPtr, Int32, IntPtr, IntPtr&, IntPtr&): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    xConnect(IntPtr, IntPtr, Int32, IntPtr, IntPtr&, IntPtr&): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    xBestIndex(IntPtr, IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    xDisconnect(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    xDestroy(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    xOpen(IntPtr, IntPtr&): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    xClose(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    xFilter(IntPtr, Int32, IntPtr, Int32, IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    xNext(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    xEof(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    xColumn(IntPtr, IntPtr, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    xRowId(IntPtr, Int64&): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    xUpdate(IntPtr, Int32, IntPtr, Int64&): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    xBegin(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    xSync(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    xCommit(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    xRollback(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    xFindFunction(IntPtr, Int32, IntPtr, SQLiteCallback&, IntPtr&): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    xRename(IntPtr, IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    xSavepoint(IntPtr, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    xRelease(IntPtr, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    xRollbackTo(IntPtr, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class System.Data.SQLite.SQLiteContext: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
    Void .ctor(IntPtr): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Data.SQLite.ISQLiteNativeHandle
  Properties:
    IntPtr NativeHandle 'get ' : 
  Methods:
    get_NativeHandle(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    NoChange(): PrivateScope, Public, HideBySig
    SetNull(): PrivateScope, Public, HideBySig
    SetDouble(Double): PrivateScope, Public, HideBySig
    SetInt(Int32): PrivateScope, Public, HideBySig
    SetInt64(Int64): PrivateScope, Public, HideBySig
    SetString(String): PrivateScope, Public, HideBySig
    SetError(String): PrivateScope, Public, HideBySig
    SetErrorCode(SQLiteErrorCode): PrivateScope, Public, HideBySig
    SetErrorTooBig(): PrivateScope, Public, HideBySig
    SetErrorNoMemory(): PrivateScope, Public, HideBySig
    SetBlob(Byte[]): PrivateScope, Public, HideBySig
    SetZeroBlob(Int32): PrivateScope, Public, HideBySig
    SetSubType(UInt32): PrivateScope, Public, HideBySig
    SetValue(SQLiteValue): PrivateScope, Public, HideBySig
Class System.Data.SQLite.SQLiteValue: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  Interfaces:
    System.Data.SQLite.ISQLiteNativeHandle
  Properties:
    IntPtr NativeHandle 'get ' : 
    Boolean Persisted 'get ' : 
    System.Object Value 'get ' : 
    UInt32 SubType 'get ' : 
    Int32 NoChange 'get ' : 
    Int32 FromBind 'get ' : 
  Methods:
    FromIntPtr(IntPtr): PrivateScope, Assembly, Static, HideBySig
    ArrayFromSizeAndIntPtr(Int32, IntPtr): PrivateScope, Assembly, Static, HideBySig
    get_NativeHandle(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Persisted(): PrivateScope, Public, HideBySig, SpecialName
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    get_SubType(): PrivateScope, Public, HideBySig, SpecialName
    get_NoChange(): PrivateScope, Public, HideBySig, SpecialName
    get_FromBind(): PrivateScope, Public, HideBySig, SpecialName
    GetSubType(): PrivateScope, Public, HideBySig
    GetNoChange(): PrivateScope, Public, HideBySig
    GetFromBind(): PrivateScope, Public, HideBySig
    GetNumericType(): PrivateScope, Public, HideBySig
    GetTypeAffinity(): PrivateScope, Public, HideBySig
    GetBytes(): PrivateScope, Public, HideBySig
    GetInt(): PrivateScope, Public, HideBySig
    GetInt64(): PrivateScope, Public, HideBySig
    GetDouble(): PrivateScope, Public, HideBySig
    GetString(): PrivateScope, Public, HideBySig
    GetBlob(): PrivateScope, Public, HideBySig
    GetObject(): PrivateScope, Public, HideBySig
    Persist(): PrivateScope, Public, HideBySig
Struct System.Data.SQLite.SQLiteIndexConstraintOp: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Byte value__ : Public, SpecialName, RTSpecialName
    System.Data.SQLite.SQLiteIndexConstraintOp EqualTo = 2 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteIndexConstraintOp GreaterThan = 4 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteIndexConstraintOp LessThanOrEqualTo = 8 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteIndexConstraintOp LessThan = 16 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteIndexConstraintOp GreaterThanOrEqualTo = 32 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteIndexConstraintOp Match = 64 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteIndexConstraintOp Like = 65 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteIndexConstraintOp Glob = 66 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteIndexConstraintOp Regexp = 67 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteIndexConstraintOp NotEqualTo = 68 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteIndexConstraintOp IsNot = 69 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteIndexConstraintOp IsNotNull = 70 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteIndexConstraintOp IsNull = 71 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteIndexConstraintOp Is = 72 : Public, Static, Literal, HasDefault
Struct System.Data.SQLite.SQLiteIndexFlags: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Data.SQLite.SQLiteIndexFlags None = 0 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteIndexFlags ScanUnique = 1 : Public, Static, Literal, HasDefault
Class System.Data.SQLite.SQLiteIndexConstraint: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
    Void .ctor(sqlite3_index_constraint): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 iColumn : Public
    System.Data.SQLite.SQLiteIndexConstraintOp op : Public
    Byte usable : Public
    Int32 iTermOffset : Public
Class System.Data.SQLite.SQLiteIndexOrderBy: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
    Void .ctor(sqlite3_index_orderby): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 iColumn : Public
    Byte desc : Public
Class System.Data.SQLite.SQLiteIndexConstraintUsage: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(sqlite3_index_constraint_usage): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 argvIndex : Public
    Byte omit : Public
Class System.Data.SQLite.SQLiteIndexInputs: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
    Void .ctor(Int32, Int32): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Data.SQLite.SQLiteIndexConstraint[] Constraints 'get ' : 
    System.Data.SQLite.SQLiteIndexOrderBy[] OrderBys 'get ' : 
  Methods:
    get_Constraints(): PrivateScope, Public, HideBySig, SpecialName
    get_OrderBys(): PrivateScope, Public, HideBySig, SpecialName
Class System.Data.SQLite.SQLiteIndexOutputs: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
    Void .ctor(Int32): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Data.SQLite.SQLiteIndexConstraintUsage[] ConstraintUsages 'get ' : 
    Int32 IndexNumber 'get set' : 
    System.String IndexString 'get set' : 
    Int32 NeedToFreeIndexString 'get set' : 
    Int32 OrderByConsumed 'get set' : 
    System.Nullable`1[System.Double] EstimatedCost 'get set' : 
    System.Nullable`1[System.Int64] EstimatedRows 'get set' : 
    System.Nullable`1[System.Data.SQLite.SQLiteIndexFlags] IndexFlags 'get set' : 
    System.Nullable`1[System.Int64] ColumnsUsed 'get set' : 
  Methods:
    CanUseEstimatedRows(): PrivateScope, Public, HideBySig
    CanUseIndexFlags(): PrivateScope, Public, HideBySig
    CanUseColumnsUsed(): PrivateScope, Public, HideBySig
    get_ConstraintUsages(): PrivateScope, Public, HideBySig, SpecialName
    get_IndexNumber(): PrivateScope, Public, HideBySig, SpecialName
    set_IndexNumber(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_IndexString(): PrivateScope, Public, HideBySig, SpecialName
    set_IndexString(String): PrivateScope, Public, HideBySig, SpecialName
    get_NeedToFreeIndexString(): PrivateScope, Public, HideBySig, SpecialName
    set_NeedToFreeIndexString(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_OrderByConsumed(): PrivateScope, Public, HideBySig, SpecialName
    set_OrderByConsumed(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_EstimatedCost(): PrivateScope, Public, HideBySig, SpecialName
    set_EstimatedCost(Nullable`1): PrivateScope, Public, HideBySig, SpecialName
    get_EstimatedRows(): PrivateScope, Public, HideBySig, SpecialName
    set_EstimatedRows(Nullable`1): PrivateScope, Public, HideBySig, SpecialName
    get_IndexFlags(): PrivateScope, Public, HideBySig, SpecialName
    set_IndexFlags(Nullable`1): PrivateScope, Public, HideBySig, SpecialName
    get_ColumnsUsed(): PrivateScope, Public, HideBySig, SpecialName
    set_ColumnsUsed(Nullable`1): PrivateScope, Public, HideBySig, SpecialName
Class System.Data.SQLite.SQLiteIndex: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
    Void .ctor(Int32, Int32): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Data.SQLite.SQLiteIndexInputs Inputs 'get ' : 
    System.Data.SQLite.SQLiteIndexOutputs Outputs 'get ' : 
  Methods:
    FromIntPtr(IntPtr, Boolean, SQLiteIndex&): PrivateScope, Assembly, Static, HideBySig
    ToIntPtr(SQLiteIndex, IntPtr, Boolean): PrivateScope, Assembly, Static, HideBySig
    get_Inputs(): PrivateScope, Public, HideBySig, SpecialName
    get_Outputs(): PrivateScope, Public, HideBySig, SpecialName
Class System.Data.SQLite.SQLiteVirtualTable: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.String[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Data.SQLite.ISQLiteNativeHandle
    System.IDisposable
  Properties:
    System.String[] Arguments 'get ' : 
    System.String ModuleName 'get ' : 
    System.String DatabaseName 'get ' : 
    System.String TableName 'get ' : 
    System.Data.SQLite.SQLiteIndex Index 'get ' : 
    IntPtr NativeHandle 'get set' : 
  Methods:
    get_Arguments(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ModuleName(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_DatabaseName(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_TableName(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Index(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    BestIndex(SQLiteIndex): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Rename(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_NativeHandle(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_NativeHandle(IntPtr): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class System.Data.SQLite.SQLiteVirtualTableCursor: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.Data.SQLite.SQLiteVirtualTable): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Data.SQLite.ISQLiteNativeHandle
    System.IDisposable
  Properties:
    System.Data.SQLite.SQLiteVirtualTable Table 'get ' : 
    Int32 IndexNumber 'get ' : 
    System.String IndexString 'get ' : 
    System.Data.SQLite.SQLiteValue[] Values 'get ' : 
    IntPtr NativeHandle 'get set' : 
  Methods:
    get_Table(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IndexNumber(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IndexString(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Values(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Filter(Int32, String, SQLiteValue[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetRowIndex(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    NextRowIndex(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_NativeHandle(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_NativeHandle(IntPtr): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Interface System.Data.SQLite.ISQLiteNativeHandle: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Properties:
    IntPtr NativeHandle 'get ' : 
  Methods:
    get_NativeHandle(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Interface System.Data.SQLite.ISQLiteManagedModule: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Properties:
    Boolean Declared 'get ' : 
    System.String Name 'get ' : 
  Methods:
    get_Declared(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Name(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    Create(SQLiteConnection, IntPtr, String[], SQLiteVirtualTable&, String&): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Connect(SQLiteConnection, IntPtr, String[], SQLiteVirtualTable&, String&): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    BestIndex(SQLiteVirtualTable, SQLiteIndex): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Disconnect(SQLiteVirtualTable): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Destroy(SQLiteVirtualTable): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Open(SQLiteVirtualTable, SQLiteVirtualTableCursor&): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Close(SQLiteVirtualTableCursor): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Filter(SQLiteVirtualTableCursor, Int32, String, SQLiteValue[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Next(SQLiteVirtualTableCursor): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Eof(SQLiteVirtualTableCursor): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Column(SQLiteVirtualTableCursor, SQLiteContext, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    RowId(SQLiteVirtualTableCursor, Int64&): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Update(SQLiteVirtualTable, SQLiteValue[], Int64&): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Begin(SQLiteVirtualTable): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Sync(SQLiteVirtualTable): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Commit(SQLiteVirtualTable): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Rollback(SQLiteVirtualTable): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    FindFunction(SQLiteVirtualTable, Int32, String, SQLiteFunction&, IntPtr&): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Rename(SQLiteVirtualTable, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Savepoint(SQLiteVirtualTable, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Release(SQLiteVirtualTable, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    RollbackTo(SQLiteVirtualTable, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class System.Data.SQLite.SQLiteMemory: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    Allocate(Int32): PrivateScope, Public, Static, HideBySig
    Allocate64(UInt64): PrivateScope, Public, Static, HideBySig
    AllocateUntracked(Int32): PrivateScope, Public, Static, HideBySig
    Allocate64Untracked(UInt64): PrivateScope, Public, Static, HideBySig
    Size(IntPtr): PrivateScope, Public, Static, HideBySig
    Size64(IntPtr): PrivateScope, Public, Static, HideBySig
    Free(IntPtr): PrivateScope, Public, Static, HideBySig
    FreeUntracked(IntPtr): PrivateScope, Public, Static, HideBySig
Class System.Data.SQLite.SQLiteString: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    GetUtf8BytesFromString(String): PrivateScope, Public, Static, HideBySig
    GetStringFromUtf8Bytes(Byte[]): PrivateScope, Public, Static, HideBySig
    ProbeForUtf8ByteLength(IntPtr, Int32): PrivateScope, Public, Static, HideBySig
    StringFromUtf8IntPtr(IntPtr): PrivateScope, Public, Static, HideBySig
    StringFromUtf8IntPtr(IntPtr, Int32): PrivateScope, Public, Static, HideBySig
    Utf8IntPtrFromString(String): PrivateScope, Public, Static, HideBySig
    Utf8IntPtrFromString(String, Boolean): PrivateScope, Public, Static, HideBySig
    Utf8IntPtrFromString(String, Int32&): PrivateScope, Public, Static, HideBySig
    Utf8IntPtrFromString(String, Boolean, Int32&): PrivateScope, Public, Static, HideBySig
    StringArrayFromUtf8SizeAndIntPtr(Int32, IntPtr): PrivateScope, Public, Static, HideBySig
    Utf8IntPtrArrayFromStringArray(String[], Boolean): PrivateScope, Public, Static, HideBySig
Class System.Data.SQLite.SQLiteBytes: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    FromIntPtr(IntPtr, Int32): PrivateScope, Public, Static, HideBySig
    ToIntPtr(Byte[]): PrivateScope, Public, Static, HideBySig
    ToIntPtr(Byte[], Int32&): PrivateScope, Public, Static, HideBySig
Class System.Data.SQLite.SQLiteMarshal: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    IntPtrForOffset(IntPtr, Int32): PrivateScope, Public, Static, HideBySig
    RoundUp(Int32, Int32): PrivateScope, Public, Static, HideBySig
    NextOffsetOf(Int32, Int32, Int32): PrivateScope, Public, Static, HideBySig
    ReadInt32(IntPtr, Int32): PrivateScope, Public, Static, HideBySig
    ReadInt64(IntPtr, Int32): PrivateScope, Public, Static, HideBySig
    ReadDouble(IntPtr, Int32): PrivateScope, Public, Static, HideBySig
    ReadIntPtr(IntPtr, Int32): PrivateScope, Public, Static, HideBySig
    WriteInt32(IntPtr, Int32, Int32): PrivateScope, Public, Static, HideBySig
    WriteInt64(IntPtr, Int32, Int64): PrivateScope, Public, Static, HideBySig
    WriteDouble(IntPtr, Int32, Double): PrivateScope, Public, Static, HideBySig
    WriteIntPtr(IntPtr, Int32, IntPtr): PrivateScope, Public, Static, HideBySig
    GetHashCode(Object, Boolean): PrivateScope, Public, Static, HideBySig
Class System.Data.SQLite.SQLiteModule: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Data.SQLite.ISQLiteManagedModule
    System.IDisposable
  Properties:
    Boolean LogErrors 'get set' : 
    Boolean LogExceptions 'get set' : 
    Boolean Declared 'get set' : 
    System.String Name 'get ' : 
  Methods:
    CreateDisposableModule(IntPtr): PrivateScope, Assembly, HideBySig
    get_LogErrors(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_LogErrors(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_LogExceptions(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_LogExceptions(Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Declared(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Declared(Boolean): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, SpecialName
    get_Name(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Create(SQLiteConnection, IntPtr, String[], SQLiteVirtualTable&, String&): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Connect(SQLiteConnection, IntPtr, String[], SQLiteVirtualTable&, String&): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    BestIndex(SQLiteVirtualTable, SQLiteIndex): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Disconnect(SQLiteVirtualTable): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Destroy(SQLiteVirtualTable): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Open(SQLiteVirtualTable, SQLiteVirtualTableCursor&): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Close(SQLiteVirtualTableCursor): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Filter(SQLiteVirtualTableCursor, Int32, String, SQLiteValue[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Next(SQLiteVirtualTableCursor): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Eof(SQLiteVirtualTableCursor): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Column(SQLiteVirtualTableCursor, SQLiteContext, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    RowId(SQLiteVirtualTableCursor, Int64&): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Update(SQLiteVirtualTable, SQLiteValue[], Int64&): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Begin(SQLiteVirtualTable): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Sync(SQLiteVirtualTable): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Commit(SQLiteVirtualTable): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Rollback(SQLiteVirtualTable): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    FindFunction(SQLiteVirtualTable, Int32, String, SQLiteFunction&, IntPtr&): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Rename(SQLiteVirtualTable, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Savepoint(SQLiteVirtualTable, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Release(SQLiteVirtualTable, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    RollbackTo(SQLiteVirtualTable, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class System.Data.SQLite.SQLiteModuleCommon: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Data.SQLite.SQLiteModuleNoop
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class System.Data.SQLite.SQLiteVirtualTableCursorEnumerator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Data.SQLite.SQLiteVirtualTableCursor
    Void .ctor(System.Data.SQLite.SQLiteVirtualTable, System.Collections.IEnumerator): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.IEnumerator
  Properties:
    System.Object Current 'get ' : 
    Boolean EndOfEnumerator 'get ' : 
    Boolean IsOpen 'get ' : 
  Methods:
    MoveNext(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Current(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Reset(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_EndOfEnumerator(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsOpen(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Close(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CheckClosed(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class System.Data.SQLite.SQLiteModuleEnumerable: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Data.SQLite.SQLiteModuleCommon
    Void .ctor(System.String, System.Collections.IEnumerable): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Collections.IEnumerable, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Create(SQLiteConnection, IntPtr, String[], SQLiteVirtualTable&, String&): PrivateScope, Public, Virtual, HideBySig
    Connect(SQLiteConnection, IntPtr, String[], SQLiteVirtualTable&, String&): PrivateScope, Public, Virtual, HideBySig
    BestIndex(SQLiteVirtualTable, SQLiteIndex): PrivateScope, Public, Virtual, HideBySig
    Disconnect(SQLiteVirtualTable): PrivateScope, Public, Virtual, HideBySig
    Destroy(SQLiteVirtualTable): PrivateScope, Public, Virtual, HideBySig
    Open(SQLiteVirtualTable, SQLiteVirtualTableCursor&): PrivateScope, Public, Virtual, HideBySig
    Close(SQLiteVirtualTableCursor): PrivateScope, Public, Virtual, HideBySig
    Filter(SQLiteVirtualTableCursor, Int32, String, SQLiteValue[]): PrivateScope, Public, Virtual, HideBySig
    Next(SQLiteVirtualTableCursor): PrivateScope, Public, Virtual, HideBySig
    Eof(SQLiteVirtualTableCursor): PrivateScope, Public, Virtual, HideBySig
    Column(SQLiteVirtualTableCursor, SQLiteContext, Int32): PrivateScope, Public, Virtual, HideBySig
    RowId(SQLiteVirtualTableCursor, Int64&): PrivateScope, Public, Virtual, HideBySig
    Update(SQLiteVirtualTable, SQLiteValue[], Int64&): PrivateScope, Public, Virtual, HideBySig
    Rename(SQLiteVirtualTable, String): PrivateScope, Public, Virtual, HideBySig
Class System.Data.SQLite.SQLiteModuleNoop: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Data.SQLite.SQLiteModule
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Create(SQLiteConnection, IntPtr, String[], SQLiteVirtualTable&, String&): PrivateScope, Public, Virtual, HideBySig
    Connect(SQLiteConnection, IntPtr, String[], SQLiteVirtualTable&, String&): PrivateScope, Public, Virtual, HideBySig
    BestIndex(SQLiteVirtualTable, SQLiteIndex): PrivateScope, Public, Virtual, HideBySig
    Disconnect(SQLiteVirtualTable): PrivateScope, Public, Virtual, HideBySig
    Destroy(SQLiteVirtualTable): PrivateScope, Public, Virtual, HideBySig
    Open(SQLiteVirtualTable, SQLiteVirtualTableCursor&): PrivateScope, Public, Virtual, HideBySig
    Close(SQLiteVirtualTableCursor): PrivateScope, Public, Virtual, HideBySig
    Filter(SQLiteVirtualTableCursor, Int32, String, SQLiteValue[]): PrivateScope, Public, Virtual, HideBySig
    Next(SQLiteVirtualTableCursor): PrivateScope, Public, Virtual, HideBySig
    Eof(SQLiteVirtualTableCursor): PrivateScope, Public, Virtual, HideBySig
    Column(SQLiteVirtualTableCursor, SQLiteContext, Int32): PrivateScope, Public, Virtual, HideBySig
    RowId(SQLiteVirtualTableCursor, Int64&): PrivateScope, Public, Virtual, HideBySig
    Update(SQLiteVirtualTable, SQLiteValue[], Int64&): PrivateScope, Public, Virtual, HideBySig
    Begin(SQLiteVirtualTable): PrivateScope, Public, Virtual, HideBySig
    Sync(SQLiteVirtualTable): PrivateScope, Public, Virtual, HideBySig
    Commit(SQLiteVirtualTable): PrivateScope, Public, Virtual, HideBySig
    Rollback(SQLiteVirtualTable): PrivateScope, Public, Virtual, HideBySig
    FindFunction(SQLiteVirtualTable, Int32, String, SQLiteFunction&, IntPtr&): PrivateScope, Public, Virtual, HideBySig
    Rename(SQLiteVirtualTable, String): PrivateScope, Public, Virtual, HideBySig
    Savepoint(SQLiteVirtualTable, Int32): PrivateScope, Public, Virtual, HideBySig
    Release(SQLiteVirtualTable, Int32): PrivateScope, Public, Virtual, HideBySig
    RollbackTo(SQLiteVirtualTable, Int32): PrivateScope, Public, Virtual, HideBySig
Struct System.Data.SQLite.SQLiteChangeSetConflictType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Data.SQLite.SQLiteChangeSetConflictType Data = 1 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteChangeSetConflictType NotFound = 2 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteChangeSetConflictType Conflict = 3 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteChangeSetConflictType Constraint = 4 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteChangeSetConflictType ForeignKey = 5 : Public, Static, Literal, HasDefault
Struct System.Data.SQLite.SQLiteChangeSetConflictResult: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Data.SQLite.SQLiteChangeSetConflictResult Omit = 0 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteChangeSetConflictResult Replace = 1 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteChangeSetConflictResult Abort = 2 : Public, Static, Literal, HasDefault
Struct System.Data.SQLite.SQLiteChangeSetStartFlags: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Data.SQLite.SQLiteChangeSetStartFlags None = 0 : Public, Static, Literal, HasDefault
    System.Data.SQLite.SQLiteChangeSetStartFlags Invert = 2 : Public, Static, Literal, HasDefault
Class System.Data.SQLite.SessionTableFilterCallback: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(Object, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(Object, String, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class System.Data.SQLite.SessionConflictCallback: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(Object, SQLiteChangeSetConflictType, ISQLiteChangeSetMetadataItem): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(Object, SQLiteChangeSetConflictType, ISQLiteChangeSetMetadataItem, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Interface System.Data.SQLite.ISQLiteChangeSet: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    System.Collections.Generic.IEnumerable`1[System.Data.SQLite.ISQLiteChangeSetMetadataItem]
    System.Collections.IEnumerable
    System.IDisposable
  Methods:
    Invert(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CombineWith(ISQLiteChangeSet): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Apply(SessionConflictCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Apply(SessionConflictCallback, SessionTableFilterCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface System.Data.SQLite.ISQLiteChangeGroup: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    System.IDisposable
  Methods:
    AddChangeSet(Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    AddChangeSet(Stream): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CreateChangeSet(Byte[]&): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CreateChangeSet(Stream): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface System.Data.SQLite.ISQLiteChangeSetMetadataItem: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    System.IDisposable
  Properties:
    System.String TableName 'get ' : 
    Int32 NumberOfColumns 'get ' : 
    System.Data.SQLite.SQLiteAuthorizerActionCode OperationCode 'get ' : 
    Boolean Indirect 'get ' : 
    Boolean[] PrimaryKeyColumns 'get ' : 
    Int32 NumberOfForeignKeyConflicts 'get ' : 
  Methods:
    get_TableName(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_NumberOfColumns(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_OperationCode(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Indirect(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_PrimaryKeyColumns(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_NumberOfForeignKeyConflicts(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    GetOldValue(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetNewValue(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetConflictValue(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface System.Data.SQLite.ISQLiteSession: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    System.IDisposable
  Methods:
    IsEnabled(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetToEnabled(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetToDisabled(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    IsIndirect(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetToIndirect(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetToDirect(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    IsEmpty(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetMemoryBytesInUse(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    AttachTable(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetTableFilter(SessionTableFilterCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CreateChangeSet(Byte[]&): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CreateChangeSet(Stream): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CreatePatchSet(Byte[]&): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CreatePatchSet(Stream): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    LoadDifferencesFromTable(String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class System.Data.SQLite.SQLiteSessionHelpers: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    CheckRawData(Byte[]): PrivateScope, Public, Static, HideBySig
Class System.Data.SQLite.SQLiteConnectionLock: AutoLayout, AnsiClass, Class, Abstract, BeforeFieldInit
    Void .ctor(System.Data.SQLite.SQLiteConnectionHandle, System.Data.SQLite.SQLiteConnectionFlags, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Methods:
    Lock(): PrivateScope, Public, HideBySig
    Unlock(): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class System.Data.SQLite.SQLiteChangeSetIterator: AutoLayout, AnsiClass, Class, BeforeFieldInit
  Interfaces:
    System.IDisposable
  Methods:
    CheckHandle(): PrivateScope, Assembly, HideBySig
    GetIntPtr(): PrivateScope, Assembly, HideBySig
    Next(): PrivateScope, Public, HideBySig
    Attach(IntPtr): PrivateScope, Public, Static, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class System.Data.SQLite.SQLiteMemoryChangeSetIterator: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Data.SQLite.SQLiteChangeSetIterator
  Methods:
    Create(Byte[]): PrivateScope, Public, Static, HideBySig
    Create(Byte[], SQLiteChangeSetStartFlags): PrivateScope, Public, Static, HideBySig
Class System.Data.SQLite.SQLiteStreamChangeSetIterator: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Data.SQLite.SQLiteChangeSetIterator
  Methods:
    Create(Stream, SQLiteConnectionFlags): PrivateScope, Public, Static, HideBySig
    Create(Stream, SQLiteConnectionFlags, SQLiteChangeSetStartFlags): PrivateScope, Public, Static, HideBySig
Class System.Data.SQLite.SQLiteStreamAdapter: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(System.IO.Stream, System.Data.SQLite.SQLiteConnectionFlags): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Methods:
    GetInputDelegate(): PrivateScope, Public, HideBySig
    GetOutputDelegate(): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class System.Data.SQLite.SQLiteSessionStreamManager: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(System.Data.SQLite.SQLiteConnectionFlags): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Methods:
    GetAdapter(Stream): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class System.Data.SQLite.SQLiteChangeGroup: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(System.Data.SQLite.SQLiteConnectionFlags): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Data.SQLite.ISQLiteChangeGroup
    System.IDisposable
  Methods:
    AddChangeSet(Byte[]): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    AddChangeSet(Stream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CreateChangeSet(Byte[]&): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CreateChangeSet(Stream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class System.Data.SQLite.SQLiteSession: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Data.SQLite.SQLiteConnectionLock
    Void .ctor(System.Data.SQLite.SQLiteConnectionHandle, System.Data.SQLite.SQLiteConnectionFlags, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Data.SQLite.ISQLiteSession
  Methods:
    IsEnabled(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    SetToEnabled(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    SetToDisabled(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    IsIndirect(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    SetToIndirect(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    SetToDirect(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    IsEmpty(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetMemoryBytesInUse(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    AttachTable(String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    SetTableFilter(SessionTableFilterCallback, Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CreateChangeSet(Byte[]&): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CreateChangeSet(Stream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CreatePatchSet(Byte[]&): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CreatePatchSet(Stream): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    LoadDifferencesFromTable(String, String): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class System.Data.SQLite.SQLiteChangeSetBase: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :System.Data.SQLite.SQLiteConnectionLock
    Void .ctor(System.Data.SQLite.SQLiteConnectionHandle, System.Data.SQLite.SQLiteConnectionFlags): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
Class System.Data.SQLite.SQLiteMemoryChangeSet: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Data.SQLite.SQLiteChangeSetBase
    Void .ctor(Byte[], System.Data.SQLite.SQLiteConnectionHandle, System.Data.SQLite.SQLiteConnectionFlags): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte[], System.Data.SQLite.SQLiteConnectionHandle, System.Data.SQLite.SQLiteConnectionFlags, System.Data.SQLite.SQLiteChangeSetStartFlags): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Data.SQLite.ISQLiteChangeSet
    System.Collections.Generic.IEnumerable`1[System.Data.SQLite.ISQLiteChangeSetMetadataItem]
    System.Collections.IEnumerable
  Methods:
    Invert(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CombineWith(ISQLiteChangeSet): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Apply(SessionConflictCallback, Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Apply(SessionConflictCallback, SessionTableFilterCallback, Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetEnumerator(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class System.Data.SQLite.SQLiteStreamChangeSet: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Data.SQLite.SQLiteChangeSetBase
    Void .ctor(System.IO.Stream, System.IO.Stream, System.Data.SQLite.SQLiteConnectionHandle, System.Data.SQLite.SQLiteConnectionFlags): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.Stream, System.IO.Stream, System.Data.SQLite.SQLiteConnectionHandle, System.Data.SQLite.SQLiteConnectionFlags, System.Data.SQLite.SQLiteChangeSetStartFlags): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Data.SQLite.ISQLiteChangeSet
    System.Collections.Generic.IEnumerable`1[System.Data.SQLite.ISQLiteChangeSetMetadataItem]
    System.Collections.IEnumerable
  Methods:
    Invert(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CombineWith(ISQLiteChangeSet): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Apply(SessionConflictCallback, Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Apply(SessionConflictCallback, SessionTableFilterCallback, Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetEnumerator(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class System.Data.SQLite.SQLiteChangeSetEnumerator: AutoLayout, AnsiClass, Class, Abstract, BeforeFieldInit
    Void .ctor(System.Data.SQLite.SQLiteChangeSetIterator): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IEnumerator`1[System.Data.SQLite.ISQLiteChangeSetMetadataItem]
    System.IDisposable
    System.Collections.IEnumerator
  Properties:
    System.Data.SQLite.ISQLiteChangeSetMetadataItem Current 'get ' : 
  Methods:
    get_Current(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    MoveNext(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Reset(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class System.Data.SQLite.SQLiteMemoryChangeSetEnumerator: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Data.SQLite.SQLiteChangeSetEnumerator
    Void .ctor(Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte[], System.Data.SQLite.SQLiteChangeSetStartFlags): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Reset(): PrivateScope, Public, Virtual, HideBySig
Class System.Data.SQLite.SQLiteStreamChangeSetEnumerator: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Data.SQLite.SQLiteChangeSetEnumerator
    Void .ctor(System.IO.Stream, System.Data.SQLite.SQLiteConnectionFlags): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.IO.Stream, System.Data.SQLite.SQLiteConnectionFlags, System.Data.SQLite.SQLiteChangeSetStartFlags): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class System.Data.SQLite.SQLiteChangeSetMetadataItem: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(System.Data.SQLite.SQLiteChangeSetIterator): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Data.SQLite.ISQLiteChangeSetMetadataItem
    System.IDisposable
  Properties:
    System.String TableName 'get ' : 
    Int32 NumberOfColumns 'get ' : 
    System.Data.SQLite.SQLiteAuthorizerActionCode OperationCode 'get ' : 
    Boolean Indirect 'get ' : 
    Boolean[] PrimaryKeyColumns 'get ' : 
    Int32 NumberOfForeignKeyConflicts 'get ' : 
  Methods:
    get_TableName(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_NumberOfColumns(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_OperationCode(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Indirect(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_PrimaryKeyColumns(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_NumberOfForeignKeyConflicts(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetOldValue(Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetNewValue(Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetConflictValue(Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class System.Data.SQLite.Generic.SQLiteVirtualTableCursorEnumerator`1[T]: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Type parameter: T
  :System.Data.SQLite.SQLiteVirtualTableCursorEnumerator
    Void .ctor(System.Data.SQLite.SQLiteVirtualTable, System.Collections.Generic.IEnumerator`1[T]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IEnumerator`1[T]
  Methods:
    Close(): PrivateScope, Public, Virtual, HideBySig
Class System.Data.SQLite.Generic.SQLiteModuleEnumerable`1[T]: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Type parameter: T
  :System.Data.SQLite.SQLiteModuleEnumerable
    Void .ctor(System.String, System.Collections.Generic.IEnumerable`1[T]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Open(SQLiteVirtualTable, SQLiteVirtualTableCursor&): PrivateScope, Public, Virtual, HideBySig
    Column(SQLiteVirtualTableCursor, SQLiteContext, Int32): PrivateScope, Public, Virtual, HideBySig
Class System.Data.SQLite.UnsafeNativeMethodsPosix+utsname: AutoLayout, AnsiClass, Class, NestedAssembly, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.String sysname : Public
    System.String nodename : Public
    System.String release : Public
    System.String version : Public
    System.String machine : Public
Struct System.Data.SQLite.UnsafeNativeMethodsWin32+ProcessorArchitecture: AutoLayout, AnsiClass, Class, NestedAssembly, Sealed
  :System.Enum
  Fields:
    UInt16 value__ : Public, SpecialName, RTSpecialName
    ProcessorArchitecture Intel = 0 : Public, Static, Literal, HasDefault
    ProcessorArchitecture MIPS = 1 : Public, Static, Literal, HasDefault
    ProcessorArchitecture Alpha = 2 : Public, Static, Literal, HasDefault
    ProcessorArchitecture PowerPC = 3 : Public, Static, Literal, HasDefault
    ProcessorArchitecture SHx = 4 : Public, Static, Literal, HasDefault
    ProcessorArchitecture ARM = 5 : Public, Static, Literal, HasDefault
    ProcessorArchitecture IA64 = 6 : Public, Static, Literal, HasDefault
    ProcessorArchitecture Alpha64 = 7 : Public, Static, Literal, HasDefault
    ProcessorArchitecture MSIL = 8 : Public, Static, Literal, HasDefault
    ProcessorArchitecture AMD64 = 9 : Public, Static, Literal, HasDefault
    ProcessorArchitecture IA32_on_Win64 = 10 : Public, Static, Literal, HasDefault
    ProcessorArchitecture Neutral = 11 : Public, Static, Literal, HasDefault
    ProcessorArchitecture ARM64 = 12 : Public, Static, Literal, HasDefault
    ProcessorArchitecture Unknown = 65535 : Public, Static, Literal, HasDefault
Struct System.Data.SQLite.UnsafeNativeMethodsWin32+SYSTEM_INFO: AutoLayout, AnsiClass, Class, NestedAssembly, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    ProcessorArchitecture wProcessorArchitecture : Public
    UInt16 wReserved : Public
    UInt32 dwPageSize : Public
    IntPtr lpMinimumApplicationAddress : Public
    IntPtr lpMaximumApplicationAddress : Public
    IntPtr dwActiveProcessorMask : Public
    UInt32 dwNumberOfProcessors : Public
    UInt32 dwProcessorType : Public
    UInt32 dwAllocationGranularity : Public
    UInt16 wProcessorLevel : Public
    UInt16 wProcessorRevision : Public
Class System.Data.SQLite.UnsafeNativeMethods+xSessionFilter: AutoLayout, AnsiClass, Class, NestedAssembly, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(IntPtr, IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(IntPtr, IntPtr, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class System.Data.SQLite.UnsafeNativeMethods+xSessionConflict: AutoLayout, AnsiClass, Class, NestedAssembly, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(IntPtr, SQLiteChangeSetConflictType, IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(IntPtr, SQLiteChangeSetConflictType, IntPtr, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class System.Data.SQLite.UnsafeNativeMethods+xSessionInput: AutoLayout, AnsiClass, Class, NestedAssembly, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(IntPtr, IntPtr, Int32&): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(IntPtr, IntPtr, Int32&, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(Int32&, IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class System.Data.SQLite.UnsafeNativeMethods+xSessionOutput: AutoLayout, AnsiClass, Class, NestedAssembly, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(IntPtr, IntPtr, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(IntPtr, IntPtr, Int32, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class System.Data.SQLite.UnsafeNativeMethods+xCreate: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(IntPtr, IntPtr, Int32, IntPtr, IntPtr&, IntPtr&): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(IntPtr, IntPtr, Int32, IntPtr, IntPtr&, IntPtr&, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IntPtr&, IntPtr&, IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class System.Data.SQLite.UnsafeNativeMethods+xConnect: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(IntPtr, IntPtr, Int32, IntPtr, IntPtr&, IntPtr&): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(IntPtr, IntPtr, Int32, IntPtr, IntPtr&, IntPtr&, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IntPtr&, IntPtr&, IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class System.Data.SQLite.UnsafeNativeMethods+xBestIndex: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(IntPtr, IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(IntPtr, IntPtr, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class System.Data.SQLite.UnsafeNativeMethods+xDisconnect: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(IntPtr, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class System.Data.SQLite.UnsafeNativeMethods+xDestroy: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(IntPtr, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class System.Data.SQLite.UnsafeNativeMethods+xOpen: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(IntPtr, IntPtr&): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(IntPtr, IntPtr&, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IntPtr&, IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class System.Data.SQLite.UnsafeNativeMethods+xClose: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(IntPtr, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class System.Data.SQLite.UnsafeNativeMethods+xFilter: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(IntPtr, Int32, IntPtr, Int32, IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(IntPtr, Int32, IntPtr, Int32, IntPtr, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class System.Data.SQLite.UnsafeNativeMethods+xNext: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(IntPtr, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class System.Data.SQLite.UnsafeNativeMethods+xEof: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(IntPtr, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class System.Data.SQLite.UnsafeNativeMethods+xColumn: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(IntPtr, IntPtr, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(IntPtr, IntPtr, Int32, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class System.Data.SQLite.UnsafeNativeMethods+xRowId: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(IntPtr, Int64&): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(IntPtr, Int64&, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(Int64&, IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class System.Data.SQLite.UnsafeNativeMethods+xUpdate: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(IntPtr, Int32, IntPtr, Int64&): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(IntPtr, Int32, IntPtr, Int64&, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(Int64&, IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class System.Data.SQLite.UnsafeNativeMethods+xBegin: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(IntPtr, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class System.Data.SQLite.UnsafeNativeMethods+xSync: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(IntPtr, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class System.Data.SQLite.UnsafeNativeMethods+xCommit: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(IntPtr, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class System.Data.SQLite.UnsafeNativeMethods+xRollback: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(IntPtr, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class System.Data.SQLite.UnsafeNativeMethods+xFindFunction: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(IntPtr, Int32, IntPtr, SQLiteCallback&, IntPtr&): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(IntPtr, Int32, IntPtr, SQLiteCallback&, IntPtr&, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(SQLiteCallback&, IntPtr&, IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class System.Data.SQLite.UnsafeNativeMethods+xRename: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(IntPtr, IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(IntPtr, IntPtr, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class System.Data.SQLite.UnsafeNativeMethods+xSavepoint: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(IntPtr, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(IntPtr, Int32, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class System.Data.SQLite.UnsafeNativeMethods+xRelease: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(IntPtr, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(IntPtr, Int32, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class System.Data.SQLite.UnsafeNativeMethods+xRollbackTo: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(IntPtr, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(IntPtr, Int32, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class System.Data.SQLite.UnsafeNativeMethods+xDestroyModule: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(IntPtr, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Struct System.Data.SQLite.UnsafeNativeMethods+sqlite3_module: AutoLayout, AnsiClass, Class, NestedAssembly, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Int32 iVersion : Public
    xCreate xCreate : Public
    xConnect xConnect : Public
    xBestIndex xBestIndex : Public
    xDisconnect xDisconnect : Public
    xDestroy xDestroy : Public
    xOpen xOpen : Public
    xClose xClose : Public
    xFilter xFilter : Public
    xNext xNext : Public
    xEof xEof : Public
    xColumn xColumn : Public
    xRowId xRowId : Public
    xUpdate xUpdate : Public
    xBegin xBegin : Public
    xSync xSync : Public
    xCommit xCommit : Public
    xRollback xRollback : Public
    xFindFunction xFindFunction : Public
    xRename xRename : Public
    xSavepoint xSavepoint : Public
    xRelease xRelease : Public
    xRollbackTo xRollbackTo : Public
Struct System.Data.SQLite.UnsafeNativeMethods+sqlite3_vtab: AutoLayout, AnsiClass, Class, NestedAssembly, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    IntPtr pModule : Public
    Int32 nRef : Public
    IntPtr zErrMsg : Public
Struct System.Data.SQLite.UnsafeNativeMethods+sqlite3_vtab_cursor: AutoLayout, AnsiClass, Class, NestedAssembly, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    IntPtr pVTab : Public
Struct System.Data.SQLite.UnsafeNativeMethods+sqlite3_index_constraint: AutoLayout, AnsiClass, Class, NestedAssembly, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(System.Data.SQLite.SQLiteIndexConstraint): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 iColumn : Public
    System.Data.SQLite.SQLiteIndexConstraintOp op : Public
    Byte usable : Public
    Int32 iTermOffset : Public
Struct System.Data.SQLite.UnsafeNativeMethods+sqlite3_index_orderby: AutoLayout, AnsiClass, Class, NestedAssembly, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(System.Data.SQLite.SQLiteIndexOrderBy): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 iColumn : Public
    Byte desc : Public
Struct System.Data.SQLite.UnsafeNativeMethods+sqlite3_index_constraint_usage: AutoLayout, AnsiClass, Class, NestedAssembly, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(System.Data.SQLite.SQLiteIndexConstraintUsage): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 argvIndex : Public
    Byte omit : Public
Struct System.Data.SQLite.UnsafeNativeMethods+sqlite3_index_info: AutoLayout, AnsiClass, Class, NestedAssembly, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Int32 nConstraint : Public
    IntPtr aConstraint : Public
    Int32 nOrderBy : Public
    IntPtr aOrderBy : Public
    IntPtr aConstraintUsage : Public
    Int32 idxNum : Public
    System.String idxStr : Public
    Int32 needToFreeIdxStr : Public
    Int32 orderByConsumed : Public
    Double estimatedCost : Public
    Int64 estimatedRows : Public
    System.Data.SQLite.SQLiteIndexFlags idxFlags : Public
    Int64 colUsed : Public
